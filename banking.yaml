openapi: 3.0.1
info:
  title: Adatree ADR Platform Open Banking API
  description: |-
    Adatree's Accredited Data Recipient (ADR) Platform Open Banking API definition. API payloads conform to the Consumer Data Right Data Standard.
    Payloads are sample payloads to represent the types of data to which the CDR regime gives access. Adatree's simplified API makes it easier for you to access the CDR ecosystem. It also keeps the data in the original, open source, CDR format to avoid lock-in to a proprietary format.
  contact:
    name: Adatree Pty Ltd
    url: https://adatree.com.au
    email: engineering@adatree.com.au
  version: "1.0.0"
servers:
  - url: https://cdr-insights-prod.api.adatree.com.au
security:
  - bearerAuth: [ 'adr:banking:read' ]
paths:
  /adr/banking/arrangements/{cdrArrangementId}/accounts:
    get:
      tags:
        - Accounts
      summary: Get Accounts under cdr arrangement id
      description: Obtain a list of accounts
      operationId: getAccounts
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/ParamProductCategory'
        - $ref: '#/components/parameters/ParamAccountOpenStatus'
        - $ref: '#/components/parameters/ParamAccountIsOwned'
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        200:
          description: A list of accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingAccountList'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/balances:
    get:
      tags:
        - AccountsBalances
      summary: Get Bulk Balances
      description: Obtain balances for multiple, filtered accounts
      operationId: getBalancesForAccounts
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/ParamAccountIds'
        - $ref: '#/components/parameters/ParamProductCategory'
        - $ref: '#/components/parameters/ParamAccountOpenStatus'
        - $ref: '#/components/parameters/ParamAccountIsOwned'
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        200:
          description: A list of account balances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingAccountsBalanceList'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        422:
          description: The request was well formed but was unable to be processed
            due to business logic specific to the request.  For this API a 422 response
            must be given if any of the account IDs provided are invalid for the consent
            context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorList_errors'
        429:
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/{accountId}/balance:
    get:
      tags:
        - AccountsBalance
      summary: Get Account Balance
      description: Obtain the balance for a single specified account
      operationId: getAccountBalance
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/RequestPathAccountId'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingAccountsBalanceById'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/{accountId}:
    get:
      tags:
        - Accounts
      summary: Get Account Detail
      description: Obtain detailed information on a single account
      operationId: getAccountDetail
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/RequestPathAccountId'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingAccountById'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/{accountId}/transactions:
    get:
      tags:
        - AccountTransactions
      summary: Get Transactions For Account
      description: |-
        Obtain transactions for a specific account.
        Some general notes that apply to all end points that retrieve transactions:
        - Where multiple transactions are returned, transactions should be ordered according to effective date in descending order
        - As the date and time for a transaction can alter depending on status and transaction type two separate date/times are included in the payload. There are still some scenarios where neither of these time stamps is available. For the purpose of filtering and ordering it is expected that the data holder will use the effective date/time which will be defined as:
          - Posted date/time if available, then
          - Execution date/time if available, then
          - A reasonable date/time nominated by the data holder using internal data structures
        - For transaction amounts it should be assumed that a negative value indicates a reduction of the available balance on the account while a positive value indicates an increase in the available balance on the account
        - For aggregated transactions (ie. groups of sub transactions reported as a single entry for the account) only the aggregated information, with as much consistent information accross the subsidiary transactions as possible, is required to be shared
      operationId: getAccountTransactions
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/RequestPathAccountIdPreviouslyListed'
        - $ref: '#/components/parameters/ParamTransactionOldestTime'
        - $ref: '#/components/parameters/ParamTransactionNewestTime'
        - $ref: '#/components/parameters/ParamTransactionMinAmount'
        - $ref: '#/components/parameters/ParamTransactionMaxAmount'
        - $ref: '#/components/parameters/ParamTransactionText'
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        200:
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseBankingTransactionList'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/{accountId}/transactions/{transactionId}:
    get:
      tags:
        - AccountTransactions
      summary: Get Transaction Detail
      description: Obtain detailed information on a transaction for a specific account
      operationId: getTransactionDetail
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/RequestPathAccountIdPreviouslyListed'
        - name: transactionId
          in: path
          description: ID of the transaction obtained from a previous call to one of
            the other transaction end points
          required: true
          schema:
            type: string
            x-cds-type: ASCIIString
            example: e27f7698-814f-467f-8c65-ca9d59832ffd
          x-cds-type: ASCIIString
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingTransactionById'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/{accountId}/direct-debits:
    get:
      tags:
        - AccountDirectDebits
      summary: Get Direct Debits For Account
      description: Obtain direct debit authorisations for a specific account
      operationId: getAccountDirectDebits
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - name: accountId
          in: path
          description: ID of the account to get direct debit authorisations for.  Must
            have previously been returned by one of the account list end points.
          required: true
          schema:
            type: string
            x-cds-type: ASCIIString
            example: d9e75179-104f-47cf-9d29-18284222bab0
          x-cds-type: ASCIIString
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingDirectDebitAuthorisationList'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/direct-debits:
    get:
      tags:
        - AccountsDirectDebits
      summary: Get Bulk Direct Debits
      description: Obtain direct debit authorisations for multiple, filtered accounts
      operationId: getDirectDebitsForAccounts
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/ParamAccountIds'
        - $ref: '#/components/parameters/ParamProductCategory'
        - $ref: '#/components/parameters/ParamAccountOpenStatus'
        - $ref: '#/components/parameters/ParamAccountIsOwned'
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingDirectDebitAuthorisationList'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        422:
          description: The request was well formed but was unable to be processed
            due to business logic specific to the request.  For this API a 422 response
            must be given if any of the account IDs provided are invalid for the consent
            context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorList'
        429:
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/{accountId}/payments/scheduled:
    get:
      tags:
        - AccountPaymentsScheduled
      summary: Get Scheduled Payments for Account
      description: Obtain scheduled, outgoing payments for a specific account
      operationId: getAccountScheduledPayments
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - name: accountId
          in: path
          description: ID of the account to get scheduled payments for. Must have previously
            been returned by one of the account list end points. The account specified
            is the source account for the payment
          required: true
          schema:
            type: string
            x-cds-type: ASCIIString
            example: d9e75179-104f-47cf-9d29-18284222bab0
          x-cds-type: ASCIIString
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingScheduledPaymentsList'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/payments/scheduled:
    get:
      tags:
        - PaymentsScheduled
      summary: Get Scheduled Payments Bulk
      description: Obtain scheduled payments for multiple, filtered accounts that
        are the source of funds for the payments
      operationId: getScheduledPaymentsForAccounts
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/ParamAccountIds'
        - $ref: '#/components/parameters/ParamProductCategory'
        - $ref: '#/components/parameters/ParamAccountOpenStatus'
        - $ref: '#/components/parameters/ParamAccountIsOwned'
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingScheduledPaymentsList'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        422:
          description: The request was well formed but was unable to be processed
            due to business logic specific to the request.  For this API a 422 response
            must be given if any of the account IDs provided are invalid for the consent
            context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorList'
        429:
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/payees:
    get:
      tags:
        - Payees
      summary: Get Payees
      description: Obtain a list of pre-registered payees
      operationId: getPayees
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - name: type
          in: query
          description: Filter on the payee type field.  In addition to normal type field
            values, ALL can be specified to retrieve all payees.  If absent the assumed
            value is ALL
          schema:
            type: string
            default: ALL
            example: BILLER
            enum:
              - BILLER
              - DOMESTIC
              - INTERNATIONAL
              - ALL
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingPayeeList'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/payees/{payeeId}:
    get:
      tags:
        - Payees
      summary: Get Payee Detail
      description: |-
        Obtain detailed information on a single payee.

        Note that the payee sub-structure should be selected to represent the payment destination only rather than any known characteristics of the payment recipient
      operationId: getPayeeDetail
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - name: payeeId
          in: path
          description: The ID used to locate the details of a particular payee
          required: true
          schema:
            type: string
            x-cds-type: ASCIIString
            example: d9e75179-104f-47cf-9d29-18284222bab0
          x-cds-type: ASCIIString
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingPayeeById'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429RateLimited'
  /adr/common/arrangements/{cdrArrangementId}/userinfo:
    get:
      tags:
        - User Info
      summary: Get user info under cdr arrangement id
      description: Obtain the user info exposed by the data holder's identify provider
      operationId: getUserinfo
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
      responses:
        200:
          description: User info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoByArrangementId'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        424:
          $ref: '#/components/responses/424FailedDependency'
        429:
          $ref: '#/components/responses/429RateLimited'
  /adr/common/arrangements/{cdrArrangementId}/customer:
    get:
      tags:
        - Customers
      summary: Get Customer
      description: Obtain basic information on the customer that has authorised the
        current session
      operationId: getCustomer
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCommonCustomer'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429RateLimited'
  /adr/common/arrangements/{cdrArrangementId}/customer/detail:
    get:
      tags:
        - Customers
      summary: Get Customer Detail
      description: Obtain detailed information on the authorised customer within the
        current session.
      operationId: getCustomerDetail
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCommonCustomerDetail'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429RateLimited'
  /adr/discovery/status:
    get:
      tags:
        - DataHolderDiscovery
      summary: Get Status
      description: Obtain a health check status for the implementation
      operationId: getStatus
      parameters:
        - $ref: '#/components/parameters/ParamDataHolderIds'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCommonDiscoveryStatus'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429RateLimited'
  /adr/discovery/outages:
    get:
      tags:
        - DataHolderDiscovery
      summary: Get Outages
      description: Obtain a list of scheduled outages for the implementation
      operationId: getOutages
      parameters:
        - $ref: '#/components/parameters/ParamDataHolderIds'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDiscoveryOutagesList'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429RateLimited'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserInfoByArrangementId:
      type: object
      required:
        - acr
        - cdrArrangementId
        - refreshTokenExpiresAt
        - sharingExpiresAt
        - sub
        - name
        - givenName
        - familyName
        - updatedAt
      properties:
        acr:
          type: string
          example: "urn:cds.au:cdr:2"
          description: Authentication Context Class Reference. Contain an ordinal LoA value.
          x-cds-type: ASCIIString
        cdrArrangementId:
          type: string
          example: 979444dc-b692-4974-a194-bde1fc0505ff
          description: A unique string representing a consent arrangement between a Data Recipient Software Product and Data Holder for a given consumer.
          x-cds-type: ASCIIString
        refreshTokenExpiresAt:
          type: number
          example: 1654669122
          description: Indicates the date-time at which the most recently provided refresh token will expire.
        sharingExpiresAt:
          type: number
          example: 1657261122
          description: Indicates the date-time at which the current sharing arrangement will expire.
        sub:
          type: string
          example: leVC9WDe0yOj31UyOoTr
          description: Pairwise Pseudonymous Identifier (PPID) for the End-User at the Data Holder.
          x-cds-type: ASCIIString
        name:
          type: string
          example: "Jane Doe"
          description: End-User's full name in displayable form including all name parts.
          x-cds-type: ASCIIString
        givenName:
          type: string
          example: "Jane"
          description: Given name(s) or first name(s) of the End-User.
          x-cds-type: ASCIIString
        familyName:
          type: string
          example: "Doe"
          description: Surname(s) or last name(s) of the End-User.
          x-cds-type: ASCIIString
        updatedAt:
          type: number
          example: 1654153174
          description: Time the End-User's information was last updated. Its value is a JSON number representing the number of seconds from 1970-01-01T00:00:00Z to the UTC updatedAt time.
        email:
          type: string
          example: "janedoe@example.com"
          description: End-User's preferred e-mail address. Its value MUST conform to the [RFC5322] addr-spec syntax. The Data Recipient MUST NOT rely upon this value being unique, as discussed in Section 5.7 of [OIDC]
        emailVerified:
          type: boolean
          example: true
          description: True if the End-User's e-mail address has been verified; otherwise false. When this Claim Value is true, this means that the Data Holder took affirmative steps to ensure that this e-mail address was controlled by the End-User at the time the verification was performed. The means by which an e-mail address is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating.
          x-cds-type: Boolean
        phoneNumber:
          type: string
          example: "+61449555123"
          description: End-User's preferred telephone number. [E.164] is RECOMMENDED as the format of this Claim, for example, +1 (425) 555-1212 or +56 (2) 687 2400. If the phone number contains an extension, it is RECOMMENDED that the extension be represented using the [RFC3966] extension syntax, for example, +1 (604) 555-1234;ext=5678.
          x-cds-type: String
        phoneNumberVerified:
          type: boolean
          example: true
          description: True if the End-User's phone number has been verified; otherwise false. When this Claim Value is true, this means that the Data Holder took affirmative steps to ensure that this phone number was controlled by the End-User at the time the verification was performed. The means by which a phone number is verified is context- specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. When true, the phone_number Claim MUST be in [E.164] format and any extensions MUST be represented in [RFC3966] format.
          x-cds-type: Boolean
        address:
          $ref: '#/components/schemas/OidcAddress'
        meta:
          $ref: '#/components/schemas/Meta'
    OidcAddress:
      type: object
      properties:
        formatted:
          type: string
          example: "2067 Armbrester Drive Sydney NSW 2000 AU"
          description: "The full mailing address, with multiple lines if necessary. Newlines can be represented either as a \r\n or as a \n."
          x-cds-type: String
        streetAddress:
          type: string
          example: "2067 Armbrester Drive"
          description: "The street address component, which may include house number, stree name, post office box, and other multi-line information. Newlines can be represented either as a \r\n or as a \n."
          x-cds-type: String
        locality:
          type: string
          example: "Sydney"
          description: "City or locality component."
          x-cds-type: String
        region:
          type: string
          example: "NSW"
          description: "State, province, prefecture or region component."
          x-cds-type: String
        postalCode:
          type: string
          example: "2000"
          description: "Zip code or postal code component."
          x-cds-type: String
        country:
          type: string
          example: "AU"
          description: "Country name component."
          x-cds-type: String
    BankingProductV3:
      type: object
      required:
        - brand
        - description
        - isTailored
        - lastUpdated
        - name
        - productCategory
        - productId
        - dataHolderId
      properties:
        productId:
          type: string
          description: A data holder specific unique identifier for this product. This identifier must be unique to a product but does not otherwise need to adhere to ID permanence guidelines.
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          x-cds-type: ASCIIString
        effectiveFrom:
          type: string
          description: The date and time from which this product is effective (ie. is available for origination).  Used to enable the articulation of products to the regime before they are available for customers to originate
          example: "1997-01-12T15:43:00.121Z"
          x-cds-type: DateTimeString
        effectiveTo:
          type: string
          description: The date and time at which this product will be retired and will no longer be offered.  Used to enable the managed deprecation of products
          x-cds-type: DateTimeString
          example: "2007-05-01T15:43:00.12345Z"
        lastUpdated:
          type: string
          description: The last date and time that the information for this product was changed (or the creation date for the product if it has never been altered)
          example: "2019-01-12T15:43:00.121Z"
          x-cds-type: DateTimeString
        dataHolderId:
          type: string
          description: The id of data holder
          example: "55b3299a-3e50-48a2-a190-cca263ccaba5"
          x-cds-type: ASCIIString
        productCategory:
          $ref: '#/components/schemas/BankingProductCategory'
        name:
          type: string
          description: The display name of the product
          example: Budgeting Insights
        description:
          type: string
          description: A description of the product
          example: Data will be used to advise you on how to manage your budget.
        brand:
          type: string
          description: A label of the brand for the product. Able to be used for filtering. For data holders with single brands this value is still required
          example: budgetinsights
        brandName:
          type: string
          description: An optional display name of the brand
          example: Smart Budget
        applicationUri:
          type: string
          description: A link to an application web page where this product can be applied for.
          example: https://apply.smartbudgets.example.com.au
          x-cds-type: URIString
        isTailored:
          type: boolean
          description: Indicates whether the product is specifically tailored to a circumstance.  In this case fees and prices are significantly negotiated depending on context. While all products are open to a degree of tailoring this flag indicates that tailoring is expected and thus that the provision of specific fees and rates is not applicable
          example: true
          x-cds-type: Boolean
        additionalInformation:
          $ref: '#/components/schemas/BankingProductV3_additionalInformation'
        cardArt:
          type: array
          description: An array of card art images
          items:
            $ref: '#/components/schemas/BankingProductV3_cardArt'
    BankingProductFeature:
      type: object
      required:
        - featureType
      properties:
        featureType:
          type: string
          description: The type of feature described
          example: BONUS_REWARDS
          enum:
            - ADDITIONAL_CARDS
            - BALANCE_TRANSFERS
            - BILL_PAYMENT
            - BONUS_REWARDS
            - CARD_ACCESS
            - COMPLEMENTARY_PRODUCT_DISCOUNTS
            - DIGITAL_BANKING
            - DIGITAL_WALLET
            - DONATE_INTEREST
            - FREE_TXNS
            - FREE_TXNS_ALLOWANCE
            - INSURANCE
            - INTEREST_FREE
            - INTEREST_FREE_TRANSFERS
            - LOYALTY_PROGRAM
            - NOTIFICATIONS
            - NPP_ENABLED
            - NPP_PAYID
            - OFFSET
            - OVERDRAFT
            - REDRAW
            - UNLIMITED_TXNS
            - OTHER
        additionalValue:
          type: string
          description: Generic field containing additional information relevant to the [featureType](#tocSproductfeaturetypedoc) specified. Whether mandatory or not is dependent on the value of the [featureType.](#tocSproductfeaturetypedoc)
          example: free mobile device screen smash insurance
        additionalInfo:
          type: string
          description: Display text providing more information on the feature. Mandatory if the [feature type](#tocSproductfeaturetypedoc) is set to OTHER
          example: the best of a kind
        additionalInfoUri:
          type: string
          description: Link to a web page with more information on this feature
          example: https://productfeature.example.com.au
          x-cds-type: URIString
      x-conditional:
        - additionalValue
        - additionalInfo
    BankingProductFee:
      type: object
      required:
        - feeType
        - name
      properties:
        name:
          type: string
          description: Name of the fee
          example: account fee
        feeType:
          type: string
          description: The type of fee
          example: PERIODIC
          enum:
            - DEPOSIT
            - EVENT
            - EXIT
            - PAYMENT
            - PERIODIC
            - PURCHASE
            - TRANSACTION
            - UPFRONT
            - VARIABLE
            - WITHDRAWAL
        amount:
          type: string
          description: The amount charged for the fee. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the *feeType* "VARIABLE" is supplied
          x-cds-type: AmountString
          example: 4.00
        balanceRate:
          type: string
          description: A fee rate calculated based on a proportion of the balance. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the *feeType* "VARIABLE" is supplied.
          example: 3.99
          x-cds-type: RateString
        transactionRate:
          type: string
          description: A fee rate calculated based on a proportion of a transaction. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the *feeType* "VARIABLE" is supplied
          example: 0.02
          x-cds-type: RateString
        accruedRate:
          type: string
          description: A fee rate calculated based on a proportion of the calculated interest accrued on the account. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the *feeType* "VARIABLE" is supplied
          example: 0.00
          x-cds-type: RateString
        accrualFrequency:
          type: string
          description: The indicative frequency with which the fee is calculated on the account. Only applies if balanceRate or accruedRate is also present. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
          x-cds-type: ExternalRef
          example: P1M
        currency:
          type: string
          description: The currency the fee will be charged in. Assumes AUD if absent
          example: AUD
          x-cds-type: CurrencyString
        additionalValue:
          type: string
          description: Generic field containing additional information relevant to the [feeType](#tocSproductfeetypedoc) specified. Whether mandatory or not is dependent on the value of [feeType](#tocSproductfeetypedoc)
          example: additional info for bank account fee
        additionalInfo:
          type: string
          description: Display text providing more information on the fee
          example: additional info on the fee
        additionalInfoUri:
          type: string
          description: Link to a web page with more information on this fee
          example: https://bankfee.example.com.au
          x-cds-type: URIString
        discounts:
          type: array
          description: An optional list of discounts to this fee that may be available
          items:
            $ref: '#/components/schemas/BankingProductDiscount'
      x-conditional:
        - additionalValue
        - amount
        - balanceRate
        - transactionRate
        - accruedRate
    BankingProductDiscount:
      type: object
      required:
        - description
        - discountType
      properties:
        description:
          type: string
          example: loyalty discount
          description: Description of the discount
        discountType:
          type: string
          example: ELIGIBILITY_ONLY
          description: The type of discount. See the next section for an overview of valid values and their meaning
          enum:
            - BALANCE
            - DEPOSITS
            - ELIGIBILITY_ONLY
            - FEE_CAP
            - PAYMENTS
        amount:
          type: string
          example: 10.00
          description: Dollar value of the discount. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory.
          x-cds-type: AmountString
        balanceRate:
          type: string
          example: 0.05
          description: A discount rate calculated based on a proportion of the balance. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee
          x-cds-type: RateString
        transactionRate:
          type: string
          example: 0.05
          description: A discount rate calculated based on a proportion of a transaction. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory
          x-cds-type: RateString
        accruedRate:
          type: string
          example: 0.05
          description: A discount rate calculated based on a proportion of the calculated interest accrued on the account. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee
          x-cds-type: RateString
        feeRate:
          type: string
          example: 0.05
          description: A discount rate calculated based on a proportion of the fee to which this discount is attached. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee
          x-cds-type: RateString
        additionalValue:
          type: string
          example: extra discount
          description: Generic field containing additional information relevant to the [discountType](#tocSproductdiscounttypedoc) specified. Whether mandatory or not is dependent on the value of [discountType](#tocSproductdiscounttypedoc)
        additionalInfo:
          type: string
          example: addition info for discount
          description: Display text providing more information on the discount
        additionalInfoUri:
          type: string
          example: https://productdiscount.example.com.au
          description: Link to a web page with more information on this discount
          x-cds-type: URIString
        eligibility:
          type: array
          description: Eligibility constraints that apply to this discount. Mandatory if ``discountType`` is ``ELIGIBILITY_ONLY``.
          items:
            $ref: '#/components/schemas/BankingProductDiscountEligibility'
      x-conditional:
        - accruedRate
        - additionalValue
        - amount
        - balanceRate
        - eligibility
        - feeRate
        - transactionRate
    BankingProductDiscountEligibility:
      type: object
      required:
        - discountEligibilityType
      properties:
        discountEligibilityType:
          type: string
          example: "STAFF"
          description: The type of the specific eligibility constraint for a discount
          enum:
            - BUSINESS
            - EMPLOYMENT_STATUS
            - INTRODUCTORY
            - MAX_AGE
            - MIN_AGE
            - MIN_INCOME
            - MIN_TURNOVER
            - NATURAL_PERSON
            - PENSION_RECIPIENT
            - RESIDENCY_STATUS
            - STAFF
            - STUDENT
            - OTHER
        additionalValue:
          type: string
          example: additional value for discount eligibility
          description: Generic field containing additional information relevant to the [discountEligibilityType](#tocSproductdiscounteligibilitydoc) specified. Whether mandatory or not is dependent on the value of [discountEligibilityType](#tocSproductdiscounteligibilitydoc)
        additionalInfo:
          type: string
          example: additional info for discount eligibility
          description: Display text providing more information on this eligibility constraint. Whether mandatory or not is dependent on the value of [discountEligibilityType](#tocSproductdiscounteligibilitydoc)
        additionalInfoUri:
          type: string
          example: https://discounteligibility.example.com.au
          description: Link to a web page with more information on this eligibility constraint
          x-cds-type: URIString
      x-conditional:
        - additionalInfo
        - additionalValue
    BankingProductDepositRate:
      type: object
      required:
        - depositRateType
        - rate
      properties:
        depositRateType:
          type: string
          example: FIXED
          description: The type of rate (base, bonus, etc). See the next section for an overview of valid values and their meaning
          enum:
            - BONUS
            - BUNDLE_BONUS
            - FIXED
            - FLOATING
            - INTRODUCTORY
            - MARKET_LINKED
            - VARIABLE
        rate:
          type: string
          example: 2.50
          description: The rate to be applied
          x-cds-type: RateString
        calculationFrequency:
          type: string
          example: P1M
          description: The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
          x-cds-type: ExternalRef
        applicationFrequency:
          type: string
          example: P1M
          description: The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
          x-cds-type: ExternalRef
        tiers:
          type: array
          description: Rate tiers applicable for this rate
          items:
            $ref: '#/components/schemas/BankingProductRateTierV3'
        additionalValue:
          type: string
          example: additional value for deposit rate
          description: Generic field containing additional information relevant to the [depositRateType](#tocSproductdepositratetypedoc) specified. Whether mandatory or not is dependent on the value of [depositRateType](#tocSproductdepositratetypedoc)
        additionalInfo:
          type: string
          example: additional info for deposit rate
          description: Display text providing more information on the rate
        additionalInfoUri:
          type: string
          example: https://depositrate.example.com.au
          description: Link to a web page with more information on this rate
          x-cds-type: URIString
      x-conditional:
        - additionalValue
    BankingProductLendingRateV2:
      type: object
      required:
        - lendingRateType
        - rate
      properties:
        lendingRateType:
          type: string
          description: The type of rate (fixed, variable, etc). See the next section for an overview of valid values and their meaning
          example: CASH_ADVANCE
          enum:
            - BUNDLE_DISCOUNT_FIXED
            - BUNDLE_DISCOUNT_VARIABLE
            - CASH_ADVANCE
            - DISCOUNT
            - FLOATING
            - INTRODUCTORY
            - MARKET_LINKED
            - PENALTY
            - PURCHASE
            - VARIABLE
            - FIXED
        rate:
          type: string
          example: 3.99
          description: The rate to be applied
          x-cds-type: RateString
        comparisonRate:
          type: string
          example: 4.99
          description: A comparison rate equivalent for this rate
          x-cds-type: RateString
        calculationFrequency:
          type: string
          example: P1M
          description: The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
          x-cds-type: ExternalRef
        applicationFrequency:
          type: string
          example: P1M
          description: The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
          x-cds-type: ExternalRef
        interestPaymentDue:
          type: string
          example: IN_ARREARS
          description: When loan payments are due to be paid within each period. The investment benefit of earlier payments affect the rate that can be offered
          enum:
            - IN_ADVANCE
            - IN_ARREARS
        repaymentType:
          type: string
          example: INTEREST_ONLY
          description: Options in place for repayments. If absent, the lending rate is applicable to all repayment types
          enum:
            - INTEREST_ONLY
            - PRINCIPAL_AND_INTEREST
        loanPurpose:
          type: string
          example: OWNER_OCCUPIED
          description: The reason for taking out the loan. If absent, the lending rate is applicable to all loan purposes
          enum:
            - OWNER_OCCUPIED
            - INVESTMENT
        tiers:
          type: array
          description: Rate tiers applicable for this rate
          items:
            $ref: '#/components/schemas/BankingProductRateTierV3'
        additionalValue:
          type: string
          example: additional value for lending
          description: Generic field containing additional information relevant to the [lendingRateType](#tocSproductlendingratetypedoc) specified. Whether mandatory or not is dependent on the value of [lendingRateType](#tocSproductlendingratetypedoc)
        additionalInfo:
          type: string
          example: additional info for lending
          description: Display text providing more information on the rate.
        additionalInfoUri:
          type: string
          example: https://lendingrate.example.com.au
          description: Link to a web page with more information on this rate
          x-cds-type: URIString
      x-conditional:
        - additionalValue
    BankingProductRateTierV3:
      type: object
      required:
        - minimumValue
        - name
        - unitOfMeasure
      properties:
        name:
          type: string
          example: basic
          description: A display name for the tier
        unitOfMeasure:
          type: string
          example: MONTH
          description: The unit of measure that applies to the tierValueMinimum and tierValueMaximum values e.g. a **DOLLAR** amount. **PERCENT** (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of **MONTH**'s or **DAY**'s (in the case of term deposit tiers)
          enum:
            - DOLLAR
            - PERCENT
            - DAY
            - MONTH
        minimumValue:
          type: number
          example: 1
          description: The number of tierUnitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value
          x-cds-type: Number
        maximumValue:
          type: number
          example: 3
          description: 'The number of tierUnitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as tierValueMinimum. Where this is the same as the tierValueMinimum value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 â€“ 2 months, 2 â€“ 3 months). If absent the tier''s range has no upper bound.'
          x-cds-type: Number
        rateApplicationMethod:
          type: string
          description: The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps')
          example: PER_TIER
          enum:
            - PER_TIER
            - WHOLE_BALANCE
        applicabilityConditions:
          $ref: '#/components/schemas/BankingProductRateCondition'
        additionalInfo:
          type: string
          example: additional info for tier
          description: Display text providing more information on the rate tier.
        additionalInfoUri:
          type: string
          example: https://tier.example.com.au
          description: Link to a web page with more information on this rate tier
          x-cds-type: URIString
      description: Defines the criteria and conditions for which a rate applies
    BankingProductRateCondition:
      type: object
      properties:
        additionalInfo:
          type: string
          example: additional info for rate condition
          description: Display text providing more information on the condition
        additionalInfoUri:
          type: string
          description: Link to a web page with more information on this condition
          example: https://ratecondition.example.com.au
          x-cds-type: URIString
      description: Defines a condition for the applicability of a tiered rate
    ResponseBankingAccountList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          $ref: '#/components/schemas/ResponseBankingAccountList_data'
        links:
          $ref: '#/components/schemas/LinksPaginated'
        meta:
          $ref: '#/components/schemas/MetaPaginated'
    BankingAccount:
      type: object
      required:
        - accountId
        - displayName
        - maskedNumber
        - productCategory
        - productName
      properties:
        accountId:
          type: string
          example: d9e75179-104f-47cf-9d29-18284222bab0
          description: A unique ID of the account adhering to the standards for ID permanence
          x-cds-type: ASCIIString
        creationDate:
          type: string
          example: "2012-12-25"
          description: Date that the account was created (if known)
          x-cds-type: DateString
        displayName:
          type: string
          example: savings
          description: The display name of the account as defined by the bank. This should not incorporate account numbers or PANs. If it does the values should be masked according to the rules of the MaskedAccountString common type.
        nickname:
          type: string
          example: sav
          description: A customer supplied nick name for the account
        openStatus:
          type: string
          example: OPEN
          description: Open or closed status for the account. If not present then OPEN is assumed
          default: OPEN
          enum:
            - OPEN
            - CLOSED
        isOwned:
          type: boolean
          example: true
          description: Flag indicating that the customer associated with the authorisation is an owner of the account. Does not indicate sole ownership, however. If not present then 'true' is assumed
          default: true
          x-cds-type: Boolean
        maskedNumber:
          type: string
          example: "xxx-xxx xxxxx1234"
          description: A masked version of the account. Whether BSB/Account Number, Credit Card PAN or another number
          x-cds-type: MaskedAccountString
        productCategory:
          $ref: '#/components/schemas/BankingProductCategory'
        productName:
          type: string
          example: Savings
          description: The unique identifier of the account as defined by the data holder (akin to model number for the account)
    ResponseBankingAccountById:
      type: object
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/BankingAccountDetail'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    BankingAccountDetail:
      allOf:
        - $ref: '#/components/schemas/BankingAccount'
        - type: object
          properties:
            bsb:
              type: string
              example: 062000
              description: The unmasked BSB for the account. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces
            accountNumber:
              example: 12345678
              type: string
              description: The unmasked account number for the account. Should not be supplied if the account number is a PAN requiring PCI compliance. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces
            bundleName:
              type: string
              example: ""
              description: Optional field to indicate if this account is part of a bundle that is providing additional benefit for to the customer
            specificAccountUType:
              type: string
              example: termDeposit
              description: The type of structure to present account specific fields.
              enum:
                - termDeposit
                - creditCard
                - loan
            termDeposit:
              type: array
              items:
                $ref: '#/components/schemas/BankingTermDepositAccount'
            creditCard:
              $ref: '#/components/schemas/BankingCreditCardAccount'
            loan:
              $ref: '#/components/schemas/BankingLoanAccount'
            depositRate:
              type: string
              example: 2.20
              description: current rate to calculate interest earned being applied to deposit balances as it stands at the time of the API call
              x-cds-type: RateString
            lendingRate:
              type: string
              example: 3.19
              description: The current rate to calculate interest payable being applied to lending balances as it stands at the time of the API call
              x-cds-type: RateString
            depositRates:
              type: array
              description: Fully described deposit rates for this account based on the equivalent structure in Product Reference
              items:
                $ref: '#/components/schemas/BankingProductDepositRate'
            lendingRates:
              type: array
              description: Fully described deposit rates for this account based on the equivalent structure in Product Reference
              items:
                $ref: '#/components/schemas/BankingProductLendingRateV2'
            features:
              type: array
              description: Array of features of the account based on the equivalent structure in Product Reference with the following additional field
              items:
                $ref: '#/components/schemas/BankingAccountProductFeature'
            fees:
              type: array
              description: Fees and charges applicable to the account based on the equivalent structure in Product Reference
              items:
                $ref: '#/components/schemas/BankingProductFee'
            addresses:
              type: array
              description: The addresses for the account to be used for correspondence
              items:
                $ref: '#/components/schemas/CommonPhysicalAddress'
          x-conditional:
            - termDeposit
            - creditCard
            - loan
    BankingAccountProductFeature:
      type: object
      description: Array of features of the account based on the equivalent structure in Product Reference with the following additional field
      allOf:
        - $ref: '#/components/schemas/BankingProductFeature'
        - type: object
          properties:
            isActivated:
              type: boolean
              description: True if the feature is already activated and false if the feature is available for activation. Defaults to true if absent. (note this is an additional field appended to the feature object defined in the Product Reference payload)
              default: true
              example: true
              x-cds-type: Boolean
    BankingTermDepositAccount:
      type: object
      required:
        - lodgementDate
        - maturityDate
        - maturityInstructions
      properties:
        lodgementDate:
          type: string
          example: "2017-12-31"
          description: The lodgement date of the original deposit
          x-cds-type: DateString
        maturityDate:
          type: string
          example: "2018-12-30"
          description: Maturity date for the term deposit
          x-cds-type: DateString
        maturityAmount:
          type: string
          example: "10000.00"
          description: Amount to be paid upon maturity. If absent it implies the amount to paid is variable and cannot currently be calculated
          x-cds-type: AmountString
        maturityCurrency:
          type: string
          example: AUD
          description: If absent assumes AUD
          x-cds-type: CurrencyString
        maturityInstructions:
          type: string
          example: ROLLED_OVER
          description: Current instructions on action to be taken at maturity. This includes default actions that may be specified in the terms and conditions for the product e.g. roll-over to the same term and frequency of interest payments
          enum:
            - ROLLED_OVER
            - PAID_OUT_AT_MATURITY
            - HOLD_ON_MATURITY
    BankingCreditCardAccount:
      type: object
      required:
        - minPaymentAmount
        - paymentDueAmount
        - paymentDueDate
      properties:
        minPaymentAmount:
          type: string
          example: 99.99
          description: The minimum payment amount due for the next card payment
          x-cds-type: AmountString
        paymentDueAmount:
          type: string
          example: 2999.99
          description: The amount due for the next card payment
          x-cds-type: AmountString
        paymentCurrency:
          type: string
          example: AUD
          description: If absent assumes AUD
          x-cds-type: CurrencyString
        paymentDueDate:
          type: string
          example: "2021-01-01"
          description: Date that the next payment for the card is due
          x-cds-type: DateString
    BankingLoanAccount:
      type: object
      required:
        - loanEndDate
        - nextInstalmentDate
        - repaymentFrequency
      properties:
        originalStartDate:
          type: string
          example: "2017-12-31"
          description: Optional original start date for the loan
          x-cds-type: DateString
        originalLoanAmount:
          type: string
          example: 300000.00
          description: Optional original loan value
          x-cds-type: AmountString
        originalLoanCurrency:
          type: string
          example: AUD
          description: If absent assumes AUD
          x-cds-type: CurrencyString
        loanEndDate:
          type: string
          example: "2047-12-30"
          description: Date that the loan is due to be repaid in full
          x-cds-type: DateString
        nextInstalmentDate:
          type: string
          example: "2021-02-28"
          description: Next date that an instalment is required
          x-cds-type: DateString
        minInstalmentAmount:
          type: string
          example: 999.99
          description: Minimum amount of next instalment
          x-cds-type: AmountString
        minInstalmentCurrency:
          type: string
          example: AUD
          description: If absent assumes AUD
          x-cds-type: CurrencyString
        maxRedraw:
          type: string
          example: 9999.99
          description: Maximum amount of funds that can be redrawn. If not present redraw is not available even if the feature exists for the account
          x-cds-type: AmountString
        maxRedrawCurrency:
          type: string
          example: AUD
          description: If absent assumes AUD
          x-cds-type: CurrencyString
        minRedraw:
          type: string
          example: 1000
          description: Minimum redraw amount
          x-cds-type: AmountString
        minRedrawCurrency:
          type: string
          example: AUD
          description: If absent assumes AUD
          x-cds-type: CurrencyString
        offsetAccountEnabled:
          type: boolean
          example: true
          description: Set to true if one or more offset accounts are configured for this loan account
          x-cds-type: Boolean
        offsetAccountIds:
          type: array
          description: The accountIDs of the configured offset accounts attached to this loan. Only offset accounts that can be accessed under the current authorisation should be included. It is expected behaviour that offsetAccountEnabled is set to true but the offsetAccountIds field is absent or empty. This represents a situation where an offset account exists but details can not be accessed under the current authorisation
          items:
            example: ["f632041c-d7c8-4679-a165-aa406cd62b13"]
            type: string
            x-cds-type: ASCIIString
        repaymentType:
          type: string
          description: Options in place for repayments. If absent defaults to PRINCIPAL_AND_INTEREST
          example: INTEREST_ONLY
          default: PRINCIPAL_AND_INTEREST
          enum:
            - INTEREST_ONLY
            - PRINCIPAL_AND_INTEREST
        repaymentFrequency:
          type: string
          example: P1M
          description: The expected or required repayment frequency. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
          x-cds-type: ExternalRef
    ResponseBankingTransactionList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          $ref: '#/components/schemas/ResponseBankingTransactionList_data'
        links:
          $ref: '#/components/schemas/LinksPaginated'
        meta:
          $ref: '#/components/schemas/MetaPaginated'
    BankingTransaction:
      type: object
      required:
        - accountId
        - amount
        - description
        - isDetailAvailable
        - reference
        - status
        - type
      properties:
        accountId:
          type: string
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          description: ID of the account for which transactions are provided
          x-cds-type: ASCIIString
        transactionId:
          type: string
          example: f111111-d7c8-4679-a165-aa406cd62b13
          description: A unique ID of the transaction adhering to the standards for ID permanence.  This is mandatory (through hashing if necessary) unless there are specific and justifiable technical reasons why a transaction cannot be uniquely identified for a particular account type
          x-cds-type: ASCIIString
        isDetailAvailable:
          type: boolean
          example: true
          description: True if extended information is available using the transaction detail end point. False if extended data is not available
          x-cds-type: Boolean
        type:
          type: string
          example: FEE
          description: The type of the transaction
          enum:
            - DIRECT_DEBIT
            - FEE
            - INTEREST_CHARGED
            - INTEREST_PAID
            - PAYMENT
            - TRANSFER_OUTGOING
            - TRANSFER_INCOMING
            - OTHER
        status:
          type: string
          example: POSTED
          description: Status of the transaction whether pending or posted. Note that there is currently no provision in the standards to guarantee the ability to correlate a pending transaction with an associated posted transaction
          enum:
            - PENDING
            - POSTED
        description:
          example: banking fee
          type: string
          description: The transaction description as applied by the financial institution
        postingDateTime:
          type: string
          example: "2021-01-12T15:43:00.121Z"
          description: The time the transaction was posted. This field is Mandatory if the transaction has status POSTED.  This is the time that appears on a standard statement.
            DateTimeString can be found at https://consumerdatastandardsaustralia.github.io/standards/#common-field-types
          x-cds-type: DateTimeString
        valueDateTime:
          type: string
          example: "2021-01-12T15:43:00.121Z"
          description: Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry
          x-cds-type: DateTimeString
        executionDateTime:
          type: string
          example: "2021-01-12T15:43:00.121Z"
          description: The time the transaction was executed by the originating customer, if available
          x-cds-type: DateTimeString
        amount:
          type: string
          example: 100.00
          description: The value of the transaction. Negative values mean money was outgoing from the account
          x-cds-type: AmountString
        currency:
          type: string
          example: AUD
          description: The currency for the transaction amount. AUD assumed if not present
          x-cds-type: CurrencyString
        reference:
          type: string
          example: overdraw
          description: The reference for the transaction provided by the originating institution. Empty string if no data provided
        merchantName:
          type: string
          example: McDonald
          description: Name of the merchant for an outgoing payment to a merchant
        merchantCategoryCode:
          type: string
          example: RANDOM
          description: The merchant category code (or MCC) for an outgoing payment to a merchant
        billerCode:
          type: string
          example: 234213427384923
          description: BPAY Biller Code for the transaction (if available)
        billerName:
          type: string
          example: test biller
          description: Name of the BPAY biller for the transaction (if available)
        crn:
          type: string
          example: 1234asdf1
          description: BPAY CRN for the transaction (if available)
        apcaNumber:
          type: string
          example: 111111
          description: 6 Digit APCA number for the initiating institution. The field is fixed-width and padded with leading zeros if applicable.
      x-conditional:
        - transactionId
        - postingDateTime
    ResponseBankingTransactionById:
      type: object
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/BankingTransactionDetail'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    BankingTransactionDetail:
      allOf:
        - $ref: '#/components/schemas/BankingTransaction'
        - type: object
          required:
            - extendedData
          properties:
            extendedData:
              $ref: '#/components/schemas/BankingTransactionDetail_extendedData'
    ResponseBankingAccountsBalanceList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          $ref: '#/components/schemas/ResponseBankingAccountsBalanceList_data'
        links:
          $ref: '#/components/schemas/LinksPaginated'
        meta:
          $ref: '#/components/schemas/MetaPaginated'
    ResponseBankingAccountsBalanceById:
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/BankingBalance'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    BankingBalance:
      type: object
      required:
        - accountId
        - availableBalance
        - currentBalance
      properties:
        accountId:
          type: string
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          description: A unique ID of the account adhering to the standards for ID permanence
          x-cds-type: ASCIIString
        currentBalance:
          type: string
          example: "10000.00"
          description: The balance of the account at this time. Should align to the balance available via other channels such as Internet Banking. Assumed to be negative if the customer has money owing
          x-cds-type: AmountString
        availableBalance:
          type: string
          example: "10000.00"
          description: Balance representing the amount of funds available for transfer. Assumed to be zero or positive
          x-cds-type: AmountString
        creditLimit:
          type: string
          example: "10000.00"
          description: Object representing the maximum amount of credit that is available for this account. Assumed to be zero if absent
          x-cds-type: AmountString
        amortisedLimit:
          type: string
          example: "0.00"
          description: Object representing the available limit amortised according to payment schedule. Assumed to be zero if absent
          x-cds-type: AmountString
        currency:
          type: string
          example: AUD
          description: The currency for the balance amounts. If absent assumed to be AUD
          x-cds-type: CurrencyString
        purses:
          type: array
          description: Optional array of balances for the account in other currencies. Included to support accounts that support multi-currency purses such as Travel Cards
          items:
            $ref: '#/components/schemas/BankingBalancePurse'
    BankingBalancePurse:
      type: object
      required:
        - amount
      properties:
        amount:
          type: string
          example: "1000.00"
          description: The balance available for this additional currency purse
          x-cds-type: AmountString
        currency:
          type: string
          example: AUD
          description: The currency for the purse
          x-cds-type: CurrencyString
    ResponseBankingPayeeList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          $ref: '#/components/schemas/ResponseBankingPayeeList_data'
        links:
          $ref: '#/components/schemas/LinksPaginated'
        meta:
          $ref: '#/components/schemas/MetaPaginated'
    ResponseBankingPayeeById:
      type: object
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/BankingPayeeDetail'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    BankingPayee:
      type: object
      required:
        - nickname
        - payeeId
        - type
      properties:
        payeeId:
          type: string
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          description: ID of the payee adhering to the rules of ID permanence
          x-cds-type: ASCIIString
        nickname:
          type: string
          example: friend A
          description: The short display name of the payee as provided by the customer. Where a customer has not provided a nickname, a display name derived by the bank for the payee consistent with existing digital banking channels
        description:
          type: string
          example: share riding
          description: A description of the payee provided by the customer
        type:
          type: string
          example: DOMESTIC
          description: The type of payee. DOMESTIC means a registered payee for domestic payments including NPP. INTERNATIONAL means a registered payee for international payments. BILLER means a registered payee for BPAY
          enum:
            - BILLER
            - DOMESTIC
            - INTERNATIONAL
        creationDate:
          type: string
          example: "2017-12-31"
          description: The date the payee was created by the customer
          x-cds-type: DateString
    BankingPayeeDetail:
      allOf:
        - $ref: '#/components/schemas/BankingPayee'
        - type: object
          required:
            - payeeUType
          properties:
            payeeUType:
              type: string
              example: biller
              description: Type of object included that describes the payee in detail
              enum:
                - domestic
                - biller
                - international
            domestic:
              $ref: '#/components/schemas/BankingDomesticPayee'
            biller:
              $ref: '#/components/schemas/BankingBillerPayee'
            international:
              $ref: '#/components/schemas/BankingInternationalPayee'
          x-conditional:
            - domestic
            - biller
            - international
    BankingDomesticPayee:
      type: object
      required:
        - payeeAccountUType
      properties:
        payeeAccountUType:
          type: string
          description: 'Type of account object included. Valid values are: **account** A standard Australian account defined by BSB/Account Number. **card** A credit or charge card to pay to (note that PANs are masked). **payId** A PayID recognised by NPP'
          example: card
          enum:
            - account
            - card
            - payId
        account:
          $ref: '#/components/schemas/BankingDomesticPayeeAccount'
        card:
          $ref: '#/components/schemas/BankingDomesticPayeeCard'
        payId:
          $ref: '#/components/schemas/BankingDomesticPayeePayId'
      x-conditional:
        - account
        - card
        - payId
    BankingDomesticPayeeAccount:
      type: object
      required:
        - accountNumber
        - bsb
      properties:
        accountName:
          type: string
          example: friendA
          description: Name of the account to pay to
        bsb:
          type: string
          example: 060000
          description: BSB of the account to pay to
        accountNumber:
          example: 12345678
          type: string
          description: Number of the account to pay to
    BankingDomesticPayeeCard:
      type: object
      required:
        - cardNumber
      properties:
        cardNumber:
          type: string
          example: xxxx xxxx xxxx 1234
          description: Name of the account to pay to
          x-cds-type: MaskedPANString
    BankingDomesticPayeePayId:
      type: object
      required:
        - identifier
        - type
      properties:
        name:
          type: string
          example: friend B
          description: The name assigned to the PayID by the owner of the PayID
        identifier:
          type: string
          example: 0400000000
          description: The identifier of the PayID (dependent on type)
        type:
          type: string
          example: TELEPHONE
          description: The type of the PayID
          enum:
            - ABN
            - EMAIL
            - ORG_IDENTIFIER
            - TELEPHONE
    BankingBillerPayee:
      type: object
      required:
        - billerCode
        - billerName
      properties:
        billerCode:
          type: string
          example: 1231412141
          description: BPAY Biller Code of the Biller
        crn:
          type: string
          example: MaskedPANString
          description: BPAY CRN of the Biller. If the contents of the CRN match the format of a Credit Card PAN then it should be masked using the rules applicable for the MaskedPANString common type
        billerName:
          type: string
          example: BillerA
          description: Name of the Biller
      x-conditional:
        - crn
    BankingInternationalPayee:
      type: object
      required:
        - bankDetails
        - beneficiaryDetails
      properties:
        beneficiaryDetails:
          $ref: '#/components/schemas/BankingInternationalPayee_beneficiaryDetails'
        bankDetails:
          $ref: '#/components/schemas/BankingInternationalPayee_bankDetails'
    ResponseBankingDirectDebitAuthorisationList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          $ref: '#/components/schemas/ResponseBankingDirectDebitAuthorisationList_data'
        links:
          $ref: '#/components/schemas/LinksPaginated'
        meta:
          $ref: '#/components/schemas/MetaPaginated'
    BankingDirectDebit:
      type: object
      required:
        - accountId
        - authorisedEntity
      properties:
        accountId:
          type: string
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          description: A unique ID of the account adhering to the standards for ID permanence.
          x-cds-type: ASCIIString
        authorisedEntity:
          $ref: '#/components/schemas/BankingAuthorisedEntity'
        lastDebitDateTime:
          type: string
          example: "1997-01-12T15:43:00.121Z"
          description: The date and time of the last debit executed under this authorisation
          x-cds-type: DateTimeString
        lastDebitAmount:
          type: string
          example: 100.00
          description: The amount of the last debit executed under this authorisation
          x-cds-type: AmountString
    BankingAuthorisedEntity:
      type: object
      properties:
        description:
          type: string
          example: broadband fee
          description: Description of the authorised entity derived from previously executed direct debits
        financialInstitution:
          type: string
          example: CBA
          description: Name of the financial institution through which the direct debit will be executed. Is required unless the payment is made via a credit card scheme
        abn:
          type: string
          example: 12341256
          description: Australian Business Number for the authorised entity
        acn:
          type: string
          example: 234123512521
          description: Australian Company Number for the authorised entity
        arbn:
          type: string
          example: 241234213424
          description: Australian Registered Body Number for the authorised entity
    ResponseBankingScheduledPaymentsList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          $ref: '#/components/schemas/ResponseBankingScheduledPaymentsList_data'
        links:
          $ref: '#/components/schemas/LinksPaginated'
        meta:
          $ref: '#/components/schemas/MetaPaginated'
    BankingScheduledPayment:
      type: object
      required:
        - from
        - payeeReference
        - payerReference
        - paymentSet
        - recurrence
        - scheduledPaymentId
        - status
      properties:
        scheduledPaymentId:
          type: string
          description: A unique ID of the scheduled payment adhering to the standards for ID permanence
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          x-cds-type: ASCIIString
        nickname:
          type: string
          example: council
          description: The short display name of the payee as provided by the customer
        payerReference:
          type: string
          example: 1231234142
          description: The reference for the transaction that will be used by the originating institution for the purposes of constructing a statement narrative on the payer's account. Empty string if no data provided
        payeeReference:
          type: string
          example: 234134241234
          description: The reference for the transaction that will be provided by the originating institution. Empty string if no data provided
        status:
          type: string
          example: ACTIVE
          description: Indicates whether the schedule is currently active. The value SKIP is equivalent to ACTIVE except that the customer has requested the next normal occurrence to be skipped.
          enum:
            - ACTIVE
            - INACTIVE
            - SKIP
        from:
          $ref: '#/components/schemas/BankingScheduledPaymentFrom'
        paymentSet:
          type: array
          items:
            $ref: '#/components/schemas/BankingScheduledPaymentSet'
        recurrence:
          $ref: '#/components/schemas/BankingScheduledPaymentRecurrence'
    BankingScheduledPaymentSet:
      required:
        - to
      properties:
        to:
          $ref: '#/components/schemas/BankingScheduledPaymentTo'
        isAmountCalculated:
          type: boolean
          example: true
          description: Flag indicating whether the amount of the payment is calculated based on the context of the event. For instance a payment to reduce the balance of a credit card to zero. If absent then false is assumed
          x-cds-type: Boolean
        amount:
          type: string
          example: 123.00
          description: The amount of the next payment if known. Mandatory unless the isAmountCalculated field is set to true. Must be zero or positive if present
          x-cds-type: AmountString
        currency:
          type: string
          example: AUD
          description: The currency for the payment. AUD assumed if not present
          x-cds-type: CurrencyString
      description: The set of payment amounts and destination accounts for this payment accommodating multi-part payments. A single entry indicates a simple payment with one destination account. Must have at least one entry
      x-conditional:
        - amount
    BankingScheduledPaymentTo:
      type: object
      required:
        - toUType
      properties:
        toUType:
          type: string
          description: The type of object provided that specifies the destination of the funds for the payment.
          example: payeeId
          enum:
            - accountId
            - payeeId
            - domestic
            - biller
            - international
        accountId:
          type: string
          example: ""
          description: Present if toUType is set to accountId. Indicates that the payment is to another account that is accessible under the current consent
          x-cds-type: ASCIIString
        payeeId:
          type: string
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          description: Present if toUType is set to payeeId. Indicates that the payment is to registered payee that can be accessed using the payee end point. If the Bank Payees scope has not been consented to then a payeeId should not be provided and the full payee details should be provided instead
          x-cds-type: ASCIIString
        domestic:
          $ref: '#/components/schemas/BankingDomesticPayee'
        biller:
          $ref: '#/components/schemas/BankingBillerPayee'
        international:
          $ref: '#/components/schemas/BankingInternationalPayee'
      description: Object containing details of the destination of the payment. Used to specify a variety of payment destination types
      x-conditional:
        - accountId
        - payeeId
        - domestic
        - biller
        - international
    BankingScheduledPaymentFrom:
      type: object
      required:
        - accountId
      properties:
        accountId:
          type: string
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          description: ID of the account that is the source of funds for the payment
          x-cds-type: ASCIIString
      description: Object containing details of the source of the payment. Currently only specifies an account ID but provided as an object to facilitate future extensibility and consistency with the to object
    BankingScheduledPaymentRecurrence:
      type: object
      required:
        - recurrenceUType
      properties:
        nextPaymentDate:
          type: string
          example: "2017-12-31"
          description: The date of the next payment under the recurrence schedule
          x-cds-type: DateString
        recurrenceUType:
          type: string
          description: The type of recurrence used to define the schedule
          example: onceOff
          enum:
            - onceOff
            - intervalSchedule
            - lastWeekDay
            - eventBased
        onceOff:
          $ref: '#/components/schemas/BankingScheduledPaymentRecurrenceOnceOff'
        intervalSchedule:
          $ref: '#/components/schemas/BankingScheduledPaymentRecurrenceIntervalSchedule'
        lastWeekDay:
          $ref: '#/components/schemas/BankingScheduledPaymentRecurrenceLastWeekday'
        eventBased:
          $ref: '#/components/schemas/BankingScheduledPaymentRecurrenceEventBased'
      description: Object containing the detail of the schedule for the payment
      x-conditional:
        - onceOff
        - intervalSchedule
        - lastWeekDay
        - eventBased
    BankingScheduledPaymentRecurrenceOnceOff:
      type: object
      required:
        - paymentDate
      properties:
        paymentDate:
          type: string
          example: "2017-12-31"
          description: The scheduled date for the once off payment
          x-cds-type: DateString
      description: Indicates that the payment is a once off payment on a specific future date. Mandatory if recurrenceUType is set to onceOff
    BankingScheduledPaymentRecurrenceIntervalSchedule:
      type: object
      required:
        - intervals
      properties:
        finalPaymentDate:
          type: string
          example: "2017-12-31"
          description: The limit date after which no more payments should be made using this schedule. If both finalPaymentDate and paymentsRemaining are present then payments will stop according to the most constraining value. If neither field is present the payments will continue indefinitely
          x-cds-type: DateString
        paymentsRemaining:
          type: integer
          example: 12
          description: Indicates the number of payments remaining in the schedule. If both finalPaymentDate and paymentsRemaining are present then payments will stop according to the most constraining value, If neither field is present the payments will continue indefinitely
          x-cds-type: PositiveInteger
        nonBusinessDayTreatment:
          type: string
          example: AFTER
          description: Enumerated field giving the treatment where a scheduled payment date is not a business day. If absent assumed to be ON.<br/>**AFTER** - If a scheduled payment date is a non-business day the payment will be made on the first business day after the scheduled payment date.<br/>**BEFORE** - If a scheduled payment date is a non-business day the payment will be made on the first business day before the scheduled payment date.<br/>**ON** - If a scheduled payment date is a non-business day the payment will be made on that day regardless.<br/>**ONLY** - Payments only occur on business days. If a scheduled payment date is a non-business day the payment will be ignored
          default: 'ON'
          enum:
            - 'AFTER'
            - 'BEFORE'
            - 'ON'
            - 'ONLY'
        intervals:
          type: array
          description: An array of interval objects defining the payment schedule.  Each entry in the array is additive, in that it adds payments to the overall payment schedule.  If multiple intervals result in a payment on the same day then only one payment will be made. Must have at least one entry
          items:
            $ref: '#/components/schemas/BankingScheduledPaymentInterval'
      description: Indicates that the schedule of payments is defined by a series of intervals. Mandatory if recurrenceUType is set to intervalSchedule
    BankingScheduledPaymentInterval:
      type: object
      required:
        - interval
      properties:
        interval:
          type: string
          example: P1D
          description: An interval for the payment. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)  (excludes recurrence syntax) with components less than a day in length ignored. This duration defines the period between payments starting with nextPaymentDate
          x-cds-type: ExternalRef
        dayInInterval:
          type: string
          example: ""
          description: Uses an interval to define the ordinal day within the interval defined by the interval field on which the payment occurs. If the resulting duration is 0 days in length or larger than the number of days in the interval then the payment will occur on the last day of the interval. A duration of 1 day indicates the first day of the interval. If absent the assumed value is P1D. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax) with components less than a day in length ignored. The first day of a week is considered to be Monday.
          x-cds-type: ExternalRef
    BankingScheduledPaymentRecurrenceLastWeekday:
      type: object
      required:
        - interval
        - lastWeekDay
      properties:
        finalPaymentDate:
          type: string
          example: "2017-12-31"
          description: The limit date after which no more payments should be made using this schedule. If both finalPaymentDate and paymentsRemaining are present then payments will stop according to the most constraining value. If neither field is present the payments will continue indefinitely
          x-cds-type: DateString
        paymentsRemaining:
          type: integer
          description: Indicates the number of payments remaining in the schedule. If both finalPaymentDate and paymentsRemaining are present then payments will stop according to the most constraining value. If neither field is present the payments will continue indefinitely
          example: 12
          x-cds-type: PositiveInteger
        interval:
          type: string
          description: The interval for the payment. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax) with components less than a day in length ignored. This duration defines the period between payments starting with nextPaymentDate
          example: P1D
          x-cds-type: ExternalRef
        lastWeekDay:
          type: string
          example: MON
          description: The weekDay specified. The payment will occur on the last occurrence of this weekday in the interval.
          enum:
            - MON
            - TUE
            - WED
            - THU
            - FRI
            - SAT
            - SUN
        nonBusinessDayTreatment:
          type: string
          description: Enumerated field giving the treatment where a scheduled payment date is not a business day. If absent assumed to be ON.<br/>**AFTER** - If a scheduled payment date is a non-business day the payment will be made on the first business day after the scheduled payment date.<br/>**BEFORE** - If a scheduled payment date is a non-business day the payment will be made on the first business day before the scheduled payment date.<br/>**ON** - If a scheduled payment date is a non-business day the payment will be made on that day regardless.<br/>**ONLY** - Payments only occur on business days. If a scheduled payment date is a non-business day the payment will be ignored
          example: AFTER
          default: 'ON'
          enum:
            - 'AFTER'
            - 'BEFORE'
            - 'ON'
            - 'ONLY'
      description: Indicates that the schedule of payments is defined according to the last occurrence of a specific weekday in an interval. Mandatory if recurrenceUType is set to lastWeekDay
    BankingScheduledPaymentRecurrenceEventBased:
      type: object
      required:
        - description
      properties:
        description:
          type: string
          example: pay every Thursday
          description: Description of the event and conditions that will result in the payment. Expected to be formatted for display to a customer
      description: Indicates that the schedule of payments is defined according to an external event that cannot be predetermined. Mandatory if recurrenceUType is set to eventBased
    ResponseCommonDiscoveryStatus:
      type: object
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/ResponseCommonDiscoveryStatus_data'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    ResponseDiscoveryOutagesList:
      type: object
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/ResponseDiscoveryOutagesList_data'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    DiscoveryOutage:
      type: object
      required:
        - duration
        - explanation
        - outageTime
      properties:
        dataHolderBrandId:
          type: string
          example: "55b3299a-3e50-48a2-a190-cca263ccaba5"
        outageTime:
          type: string
          example: "1997-01-12T15:43:00.121Z"
          description: Date and time that the outage is scheduled to begin
          x-cds-type: DateTimeString
        duration:
          type: string
          example: P1D
          description: Planned duration of the outage. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
          x-cds-type: ExternalRef
        isPartial:
          type: boolean
          description: Flag that indicates, if present and set to true, that the outage is only partial meaning that only a subset of normally available end points will be affected by the outage
          example: true
          x-cds-type: Boolean
        explanation:
          type: string
          example: power outage
          description: Provides an explanation of the current outage that can be displayed to an end customer
    ResponseCommonCustomer:
      type: object
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/ResponseCommonCustomer_data'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
      x-conditional:
        - person
        - organisation
    ResponseCommonCustomerDetail:
      type: object
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/ResponseCommonCustomerDetail_data'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
      x-conditional:
        - person
        - organisation
    CommonPerson:
      type: object
      required:
        - lastName
        - middleNames
      properties:
        lastUpdateTime:
          type: string
          example: "1997-01-12T15:43:00.121Z"
          description: The date and time that this record was last updated by the customer.  If no update has occurred then this date should reflect the initial creation date for the data
          x-cds-type: DateTimeString
        firstName:
          type: string
          example: John
          description: For people with single names this field need not be present.  The single name should be in the lastName field
        lastName:
          type: string
          example: Doe
          description: For people with single names the single name should be in this field
        middleNames:
          type: array
          description: Field is mandatory but array may be empty
          example: []
          items:
            type: string
        prefix:
          type: string
          example: Mr
          description: Also known as title or salutation.  The prefix to the name (e.g. Mr, Mrs, Ms, Miss, Sir, etc)
        suffix:
          type: string
          example: Jr
          description: Used for a trailing suffix to the name (e.g. Jr)
        occupationCode:
          type: string
          example: 233211
          description: Value is a valid [ANZSCO](http://www.abs.gov.au/ANZSCO) Standard Occupation classification code. If the occupation code held by the data holder is not one of the supported [ANZSCO](http://www.abs.gov.au/ANZSCO) versions, then it must not be supplied.
          x-cds-type: ExternalRef
    CommonPersonDetail:
      allOf:
        - $ref: '#/components/schemas/CommonPerson'
        - type: object
          required:
            - emailAddresses
            - phoneNumbers
            - physicalAddresses
          properties:
            phoneNumbers:
              type: array
              description: Array is mandatory but may be empty if no phone numbers are held
              items:
                $ref: '#/components/schemas/CommonPhoneNumber'
            emailAddresses:
              type: array
              description: May be empty
              items:
                $ref: '#/components/schemas/CommonEmailAddress'
            physicalAddresses:
              type: array
              description: Must contain at least one address. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail
              items:
                $ref: '#/components/schemas/CommonPhysicalAddressWithPurpose'
    CommonOrganisation:
      type: object
      required:
        - agentLastName
        - agentRole
        - businessName
        - organisationType
      properties:
        lastUpdateTime:
          type: string
          example: "1997-01-12T15:43:00.121Z"
          description: The date and time that this record was last updated by the customer. If no update has occurred then this date should reflect the initial creation date for the data
          x-cds-type: DateTimeString
        agentFirstName:
          type: string
          example: Jane
          description: The first name of the individual providing access on behalf of the organisation. For people with single names this field need not be present.  The single name should be in the lastName field
        agentLastName:
          type: string
          example: Doe
          description: The last name of the individual providing access on behalf of the organisation. For people with single names the single name should be in this field
        agentRole:
          type: string
          example: manager
          description: The role of the individual identified as the agent who is providing authorisation.  Expected to be used for display. Default to Unspecified if the role is not known
        businessName:
          type: string
          example: bumpty
          description: Name of the organisation
        legalName:
          type: string
          example: dumpty
          description: Legal name, if different to the business name
        shortName:
          type: string
          example: bdumpty
          description: Short name used for communication, if different to the business name
        abn:
          type: string
          example: 2342342342
          description: Australian Business Number for the organisation
        acn:
          type: string
          example: 13241234234
          description: Australian Company Number for the organisation. Required only if an ACN is applicable for the organisation type
        isACNCRegistered:
          type: boolean
          example: true
          description: True if registered with the ACNC.  False if not. Absent or null if not confirmed.
          x-cds-type: Boolean
        industryCode:
          type: string
          example: MINING
          description: A valid [ANZSIC](http://www.abs.gov.au/ANZSIC) code for the organisation. If the industry code held by the data holder is not one of the supported [ANZSIC](http://www.abs.gov.au/ANZSIC) versions, then it must not be supplied.
          x-cds-type: ExternalRef
        organisationType:
          type: string
          example: COMPANY
          description: Legal organisation type
          enum:
            - COMPANY
            - GOVERNMENT_ENTITY
            - PARTNERSHIP
            - SOLE_TRADER
            - TRUST
            - OTHER
        registeredCountry:
          type: string
          description: Enumeration with values from [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country codes.  Assumed to be AUS if absent
          example: AUS
          x-cds-type: ExternalRef
        establishmentDate:
          type: string
          description: The date the organisation described was established
          example: "2017-12-31"
          x-cds-type: DateString
    CommonOrganisationDetail:
      allOf:
        - $ref: '#/components/schemas/CommonOrganisation'
        - type: object
          required:
            - physicalAddresses
          properties:
            physicalAddresses:
              type: array
              description: Must contain at least one address. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail
              items:
                $ref: '#/components/schemas/CommonPhysicalAddressWithPurpose'
    CommonPhoneNumber:
      type: object
      required:
        - fullNumber
        - number
        - purpose
      properties:
        isPreferred:
          type: boolean
          description: May be true for one and only one entry to indicate the preferred phone number. Assumed to be 'false' if not present
          example: true
          x-cds-type: Boolean
        purpose:
          type: string
          description: The purpose of the number as specified by the customer
          example: HOME
          enum:
            - MOBILE
            - HOME
            - INTERNATIONAL
            - WORK
            - OTHER
            - UNSPECIFIED
        countryCode:
          type: string
          description: If absent, assumed to be Australia (+61). The + should be included
          example: +61
        areaCode:
          type: string
          description: Required for non Mobile Phones, if field is present and refers to Australian code - the leading 0 should be omitted.
          example: ""
        number:
          type: string
          description: The actual phone number, with leading zeros as appropriate
          example: 400000000
        extension:
          type: string
          example: ""
          description: An extension number (if applicable)
        fullNumber:
          type: string
          description: Fully formatted phone number with country code, area code, number and extension incorporated. Formatted according to section 5.1.4. of [RFC 3966](https://www.ietf.org/rfc/rfc3966.txt)
          example: +61400000000
          x-cds-type: ExternalRef
      x-conditional:
        - areaCode
    CommonEmailAddress:
      type: object
      required:
        - address
        - purpose
      properties:
        isPreferred:
          type: boolean
          description: May be true for one and only one email record in the collection. Denotes the default email address
          example: true
          x-cds-type: Boolean
        purpose:
          type: string
          description: The purpose for the email, as specified by the customer (Enumeration)
          example: WORK
          enum:
            - WORK
            - HOME
            - OTHER
            - UNSPECIFIED
        address:
          type: string
          example: 1 Pitt ST SYDNEY NSW 2000
          description: A correctly formatted email address, as defined by the addr_spec format in [RFC 5322](https://www.ietf.org/rfc/rfc5322.txt)
          x-cds-type: ExternalRef
    CommonPhysicalAddressWithPurpose:
      allOf:
        - $ref: '#/components/schemas/CommonPhysicalAddress'
        - type: object
          required:
            - purpose
          properties:
            purpose:
              type: string
              description: Enumeration of values indicating the purpose of the physical address
              example: WORK
              enum:
                - MAIL
                - PHYSICAL
                - REGISTERED
                - WORK
                - OTHER
    CommonPhysicalAddress:
      type: object
      required:
        - addressUType
      properties:
        addressUType:
          type: string
          description: The type of address object present
          example: simple
          enum:
            - simple
            - paf
        simple:
          $ref: '#/components/schemas/CommonSimpleAddress'
        paf:
          $ref: '#/components/schemas/CommonPAFAddress'
      x-conditional:
        - simple
        - paf
    CommonSimpleAddress:
      type: object
      required:
        - addressLine1
        - city
        - state
      properties:
        mailingName:
          type: string
          description: Name of the individual or business formatted for inclusion in an address used for physical mail
          example: John Doe
        addressLine1:
          type: string
          description: First line of the standard address object
          example: 1 Pitt ST
        addressLine2:
          type: string
          description: Second line of the standard address object
          example: ""
        addressLine3:
          type: string
          description: Third line of the standard address object
          example: ""
        postcode:
          type: string
          description: Mandatory for Australian addresses
          example: 2000
        city:
          type: string
          description: Name of the city or locality
          example: SYDNEY
        state:
          type: string
          description: Free text if the country is not Australia. If country is Australia then must be one of the values defined by the [State Type Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf) in the PAF file format. NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT
          example: NSW
        country:
          type: string
          description: A valid [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country code. Australia (AUS) is assumed if country is not present.
          example: AUS
          default: AUS
          x-cds-type: ExternalRef
      x-conditional:
        - postcode
    CommonPAFAddress:
      type: object
      required:
        - localityName
        - postcode
        - state
      properties:
        dpid:
          type: string
          description: Unique identifier for an address as defined by Australia Post.  Also known as Delivery Point Identifier
          example: 17160
        thoroughfareNumber1:
          type: integer
          description: Thoroughfare number for a property (first number in a property ranged address)
          example: 16
          x-cds-type: PositiveInteger
        thoroughfareNumber1Suffix:
          type: string
          description: Suffix for the thoroughfare number. Only relevant is thoroughfareNumber1 is populated
          example: ""
        thoroughfareNumber2:
          type: integer
          description: Second thoroughfare number (only used if the property has a ranged address eg 23-25)
          example: 19
          x-cds-type: PositiveInteger
        thoroughfareNumber2Suffix:
          type: string
          description: Suffix for the second thoroughfare number. Only relevant is thoroughfareNumber2 is populated
          example: ""
        flatUnitType:
          type: string
          description: Type of flat or unit for the address
          example: unit
        flatUnitNumber:
          type: string
          description: Unit number (including suffix, if applicable)
          example: 10
        floorLevelType:
          type: string
          description: Type of floor or level for the address
          example: level
        floorLevelNumber:
          type: string
          description: Floor or level number (including alpha characters)
          example: 3
        lotNumber:
          type: string
          description: Allotment number for the address
          example: 10
        buildingName1:
          type: string
          description: Building/Property name 1
          example: summer
        buildingName2:
          type: string
          description: Building/Property name 2
          example: ""
        streetName:
          type: string
          description: The name of the street
          example: Long
        streetType:
          type: string
          description: The street type. Valid enumeration defined by Australia Post PAF code file
          example: ST
        streetSuffix:
          type: string
          description: The street type suffix. Valid enumeration defined by Australia Post PAF code file
        postalDeliveryType:
          type: string
          description: Postal delivery type. (eg. PO BOX). Valid enumeration defined by Australia Post PAF code file
          example: PO BOX
        postalDeliveryNumber:
          type: integer
          description: Postal delivery number if the address is a postal delivery type
          example: 15
          x-cds-type: PositiveInteger
        postalDeliveryNumberPrefix:
          type: string
          description: Postal delivery number prefix related to the postal delivery number
          example: ""
        postalDeliveryNumberSuffix:
          type: string
          description: Postal delivery number suffix related to the postal delivery number
          example: ""
        localityName:
          type: string
          description: Full name of locality
          example: "Sydney"
        postcode:
          type: string
          description: Postcode for the locality
          example: 2000
        state:
          type: string
          description: State in which the address belongs. Valid enumeration defined by Australia Post PAF code file [State Type Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf). NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT
          example: NSW
      description: Australian address formatted according to the file format defined by the [PAF file format](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf)
    Links:
      type: object
      required:
        - self
      properties:
        self:
          type: string
          description: Fully qualified link that generated the current response document
          example: https://self.example.com.au
          x-cds-type: URIString
    Meta:
      type: object
      required:
        - cdr_arrangement_id
      properties:
        cdr_arrangement_id:
          type: string
          description: Used to identify the consent arrangement for returned customer data
          example: 998621c8-1e1d-44ca-826e-754b910e5697
        debug:
          type: object
          description: troubleshooting infor for CTS testing
          example: {}
    LinksPaginated:
      type: object
      required:
        - self
      properties:
        self:
          type: string
          description: Fully qualified link that generated the current response document.
            https://self.example.com.au will be converted to https://self.example.com.au?page=1&page-size=25
          example: https://self.example.com.au?page=3&page-size=25
          x-cds-type: URIString
        first:
          type: string
          description: URI to the first page of this set. Mandatory if this response is not the first page
          example: https://self.example.com.au?page=1&page-size=25
          x-cds-type: URIString
        prev:
          type: string
          description: URI to the previous page of this set. Mandatory if this response is not the first page
          example: https://self.example.com.au?page=2&page-size=25
          x-cds-type: URIString
        next:
          type: string
          description: URI to the next page of this set. Mandatory if this response is not the last page
          example: https://self.example.com.au?page=4&page-size=25
          x-cds-type: URIString
        last:
          type: string
          description: URI to the last page of this set. Mandatory if this response is not the last page
          example: https://self.example.com.au?page=15&page-size=25
          x-cds-type: URIString
      x-conditional:
        - prev
        - next
        - first
        - last
    MetaPaginated:
      type: object
      required:
        - totalPages
        - totalRecords
        - cdr_arrangement_id
      properties:
        totalRecords:
          type: integer
          description: The total number of records in the full set. See [pagination](#pagination).
          example: 581
          x-cds-type: NaturalNumber
        totalPages:
          type: integer
          description: The total number of pages in the full set. See [pagination](#pagination).
          example: 24
          x-cds-type: NaturalNumber
        isQueryParamUnsupported:
          type: boolean
          description: indicates whether text parameter is supported or not
          example: true
        cdr_arrangement_id:
          type: string
          description: Used to identify the consent arrangement for returned customer data
          example: 998621c8-1e1d-44ca-826e-754b910e5697
        debug:
          type: object
          description: troubleshooting info
          example: {}
    ResponseErrorList:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResponseErrorList_errors'
    BankingProductCategory:
      type: string
      description: The category to which a product or account belongs. See [here](#product-categories) for more details
      example: LEASES
      enum:
        - BUSINESS_LOANS
        - CRED_AND_CHRG_CARDS
        - LEASES
        - MARGIN_LOANS
        - OVERDRAFTS
        - PERS_LOANS
        - REGULATED_TRUST_ACCOUNTS
        - RESIDENTIAL_MORTGAGES
        - TERM_DEPOSITS
        - TRADE_FINANCE
        - TRAVEL_CARDS
        - TRANS_AND_SAVINGS_ACCOUNTS
    BankingProductV3_additionalInformation:
      properties:
        overviewUri:
          type: string
          description: General overview of the product
          example: https://overview.example.com.au
          x-cds-type: URIString
        termsUri:
          type: string
          description: Terms and conditions for the product
          example: https://terms.example.com.au
          x-cds-type: URIString
        eligibilityUri:
          type: string
          description: Eligibility rules and criteria for the product
          example: https://eligiblity.example.com.au
          x-cds-type: URIString
        feesAndPricingUri:
          type: string
          description: Description of fees, pricing, discounts, exemptions and bonuses for the product
          example: https://feesandpricing.example.com.au
          x-cds-type: URIString
        bundleUri:
          type: string
          description: Description of a bundle that this product can be part of
          example: https://bundle.example.com.au
          x-cds-type: URIString
      description: Object that contains links to additional information on specific topics
    BankingProductV3_cardArt:
      required:
        - imageUri
      properties:
        title:
          type: string
          description: Display label for the specific image
          example: title image
        imageUri:
          type: string
          description: URI reference to a PNG, JPG or GIF image with proportions defined by ISO 7810 ID-1 and width no greater than 512 pixels. The URI reference may be a link or url-encoded data URI [RFC 2397](https://tools.ietf.org/html/rfc2397)
          example: https://image12345.example.com.au
          x-cds-type: URIString
    ResponseBankingAccountList_data:
      required:
        - accounts
      properties:
        accounts:
          type: array
          description: The list of accounts returned. If the filter results in an empty set then this array may have no records
          items:
            $ref: '#/components/schemas/BankingAccount'
    ResponseBankingTransactionList_data:
      required:
        - transactions
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/BankingTransaction'
    BankingTransactionDetail_extendedData_x2p101Payload:
      required:
        - extendedDescription
      properties:
        extendedDescription:
          type: string
          description: An extended string description. Only present if specified by the extensionUType field
          example: extended descirption of a transaction
        endToEndId:
          type: string
          description: An end to end ID for the payment created at initiation
          example: end-to-endid-for-payment
        purposeCode:
          type: string
          description: Purpose of the payment.  Format is defined by NPP standards for the x2p1.01 overlay service
          example: payment-purpose-npp
    BankingTransactionDetail_extendedData:
      required:
        - service
      properties:
        payer:
          type: string
          description: Label of the originating payer. Mandatory for inbound payment
          example: Jane Doe
        payee:
          type: string
          description: Label of the target PayID.  Mandatory for an outbound payment. The name assigned to the BSB/Account Number or PayID (by the owner of the PayID)
          example: John Doe
        extensionUType:
          type: string
          description: Optional extended data provided specific to transaction originated via NPP
          example: x2p101Payload
          enum:
            - x2p101Payload
        x2p101Payload:
          $ref: '#/components/schemas/BankingTransactionDetail_extendedData_x2p101Payload'
        service:
          type: string
          description: 'Identifier of the applicable overlay service. Valid values are: X2P1.01'
          example: X2P1.01
          enum:
            - X2P1.01
    ResponseBankingAccountsBalanceList_data:
      required:
        - balances
      properties:
        balances:
          type: array
          description: The list of balances returned
          items:
            $ref: '#/components/schemas/BankingBalance'
    ResponseBankingPayeeList_data:
      required:
        - payees
      properties:
        payees:
          type: array
          description: The list of payees returned
          items:
            $ref: '#/components/schemas/BankingPayee'
    BankingInternationalPayee_beneficiaryDetails:
      required:
        - country
      properties:
        name:
          type: string
          description: Name of the beneficiary
          example: John Doe
        country:
          type: string
          description: Country where the beneficiary resides. A valid [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country code
          example: AUS
          x-cds-type: ExternalRef
        message:
          type: string
          description: Response message for the payment
          example: Stay safe 2020
    BankingInternationalPayee_bankDetails_bankAddress:
      required:
        - address
        - name
      properties:
        name:
          type: string
          description: Name of the recipient Bank
          example: Jane Doe
        address:
          type: string
          description: Address of the recipient Bank
          example: 1 Pitt ST Sydney NSW 2000
    BankingInternationalPayee_bankDetails:
      required:
        - accountNumber
        - country
      properties:
        country:
          type: string
          description: Country of the recipient institution. A valid [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country code
          example: AUS
          x-cds-type: ExternalRef
        accountNumber:
          type: string
          description: Account Targeted for payment
          example: 12345678
        bankAddress:
          $ref: '#/components/schemas/BankingInternationalPayee_bankDetails_bankAddress'
        beneficiaryBankBIC:
          type: string
          description: Swift bank code.  Aligns with standard [ISO 9362](https://www.iso.org/standard/60390.html)
          example: CTBAAU2S
          x-cds-type: ExternalRef
        fedWireNumber:
          type: string
          description: Number for Fedwire payment (Federal Reserve Wire Network)
          example: "fed-wire-number"
        sortCode:
          type: string
          description: Sort code used for account identification in some jurisdictions
          example: "sort-code"
        chipNumber:
          type: string
          description: Number for the Clearing House Interbank Payments System
          example: "clearing-house-interbank-number"
        routingNumber:
          type: string
          description: International bank routing number
          example: "international-bank-routing-number"
        legalEntityIdentifier:
          type: string
          description: The legal entity identifier (LEI) for the beneficiary.  Aligns with [ISO 17442](https://www.iso.org/standard/59771.html)
          example: "legal-entity-id"
          x-cds-type: ExternalRef
    ResponseBankingDirectDebitAuthorisationList_data:
      required:
        - directDebitAuthorisations
      properties:
        directDebitAuthorisations:
          type: array
          description: The list of authorisations returned
          items:
            $ref: '#/components/schemas/BankingDirectDebit'
    ResponseBankingScheduledPaymentsList_data:
      required:
        - scheduledPayments
      properties:
        scheduledPayments:
          type: array
          description: The list of scheduled payments to return
          items:
            $ref: '#/components/schemas/BankingScheduledPayment'
    ResponseCommonDiscoveryStatus_data:
      required:
        - status
        - updateTime
      properties:
        status:
          type: string
          description: Enumeration with values. OK (implementation is fully functional). PARTIAL_FAILURE (one or more end points are unexpectedly unavailable). UNAVAILABLE (the full implementation is unexpectedly unavailable). SCHEDULED_OUTAGE (an advertised outage is in effect)
          example: SCHEDULED_OUTAGE
          enum:
            - OK
            - PARTIAL_FAILURE
            - SCHEDULED_OUTAGE
            - UNAVAILABLE
        explanation:
          type: string
          description: Provides an explanation of the current outage that can be displayed to an end customer. Mandatory if the status property is any value other than OK
          example: maintenance
        detectionTime:
          type: string
          description: The date and time that the current outage was detected. Should only be present if the status property is PARTIAL_FAILURE or UNAVAILABLE
          example: "2020-01-12T03:00:00.121Z"
          x-cds-type: DateTimeString
        expectedResolutionTime:
          type: string
          description: The date and time that full service is expected to resume (if known). Should not be present if the status property has a value of OK.
          example: "2020-01-12T06:00:00.121Z"
          x-cds-type: DateTimeString
        updateTime:
          type: string
          description: The date and time that this status was last updated by the Data Holder.
          example: "2020-01-12T04:00:00.121Z"
          x-cds-type: DateTimeString
    ResponseDiscoveryOutagesList_data:
      required:
        - outages
      properties:
        outages:
          type: array
          description: List of scheduled outages. Property is mandatory but may contain and empty list if no outages are scheduled
          items:
            $ref: '#/components/schemas/DiscoveryOutage'
    ResponseCommonCustomer_data:
      required:
        - customerUType
      properties:
        customerUType:
          type: string
          description: The type of customer object that is present
          example: person
          enum:
            - person
            - organisation
        person:
          $ref: '#/components/schemas/CommonPerson'
        organisation:
          $ref: '#/components/schemas/CommonOrganisation'
    ResponseCommonCustomerDetail_data:
      required:
        - customerUType
      properties:
        customerUType:
          type: string
          description: The type of customer object that is present
          example: person
          enum:
            - person
            - organisation
        person:
          $ref: '#/components/schemas/CommonPersonDetail'
        organisation:
          $ref: '#/components/schemas/CommonOrganisationDetail'
    ResponseErrorList_errors:
      required:
        - code
        - detail
        - title
      properties:
        code:
          type: string
          description: 'Error code'
          example: "0001"
        title:
          type: string
          description: 'Title of invalid parameter or payload property '
          example: "Invalid account id"
        detail:
          type: string
          description: ID of the account not found
          example: "invalid format for account id"
        meta:
          type: object
          description: Optional additional data for specific error types
          properties: {}
  #-------------------------------
  # Reusable parameters
  #-------------------------------
  parameters:
    RequestPathCdrArrangementId:
      name: cdrArrangementId
      description: Used to identify the consent arrangement from which to identify the bank and consumer information required to fetch the data.
      in: path
      required: true
      schema:
        type: string
        example: 998621c8-1e1d-44ca-826e-754b910e5697
    RequestPathAccountId:
      name: accountId
      in: path
      description: A tokenised identifier for the account which is unique but not shareable
      required: true
      schema:
        type: string
        x-cds-type: ASCIIString
        example: d9e75179-104f-47cf-9d29-18284222bab0
      x-cds-type: ASCIIString
    RequestPathDataHolderBrandId:
      name: dataHolderBrandId
      in: path
      description: Used to identify the data holder from which to fetch the product data.
      required: true
      schema:
        type: string
        example: 55b3299a-3e50-48a2-a190-cca263ccaba5
    RequestPathAccountIdPreviouslyListed:
      name: accountId
      in: path
      description: ID of the account to get transactions for. Must have previously
        been returned by one of the account list end points.
      required: true
      schema:
        type: string
        x-cds-type: ASCIIString
        example: d9e75179-104f-47cf-9d29-18284222bab0
      x-cds-type: ASCIIString
    ParamAccountIds:
      name: accountIds
      in: query
      description: Adatree's extension to support account ids for GET /accounts/balances
      required: false
      schema:
        type: array
        items:
          type: string
          description: Array of specific accountIds to obtain authorisations for
          example: d9e75179-104f-47cf-9d29-18284222bab0
          x-cds-type: ASCIIString
    ParamProductCategory:
      name: product-category
      in: query
      description: Used to filter results on the productCategory field applicable to accounts.
        Any one of the valid values for this field can be supplied. If absent then all accounts returned.
      required: false
      schema:
        type: string
        example: BUSINESS_LOANS
        enum:
          - BUSINESS_LOANS
          - CRED_AND_CHRG_CARDS
          - LEASES
          - MARGIN_LOANS
          - OVERDRAFTS
          - PERS_LOANS
          - REGULATED_TRUST_ACCOUNTS
          - RESIDENTIAL_MORTGAGES
          - TERM_DEPOSITS
          - TRADE_FINANCE
          - TRAVEL_CARDS
          - TRANS_AND_SAVINGS_ACCOUNTS
    ParamAccountIsOwned:
      name: is-owned
      in: query
      description: Filters accounts based on whether they are owned by the authorised customer.
        True for owned accounts, false for unowned accounts and absent for all accounts
      schema:
        type: boolean
        example: true
        x-cds-type: Boolean
    ParamDataHolderIds:
      name: data-holder-ids
      in: query
      description: Array of strings used to identify the data holder from which to fetch the product/outage/status data.
      required: false
      schema:
        type: array
        items:
          type: string
          example: 55b3299a-3e50-48a2-a190-cca263ccaba5
    ParamPage:
      name: page
      in: query
      description: Page of results to request (standard pagination)
      schema:
        type: integer
        format: int32
        default: 1
        minimum: 1
        example: 1
        x-cds-type: PositiveInteger
    ParamPageSize:
      name: page-size
      in: query
      description: Page size to request. Default is 25 (standard pagination)
      schema:
        type: integer
        default: 25
        minimum: 1
        example: 25
        x-cds-type: PositiveInteger
    ParamAccountOpenStatus:
      name: open-status
      in: query
      description: Used to filter results according to open/closed status.
        Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed
      required: false
      schema:
        type: string
        example: OPEN
        default: ALL
        enum:
          - OPEN
          - CLOSED
          - ALL
    RequestHeader_x-v:
      name: x-v
      in: header
      description: Version of the API end point requested by the client. Must be set
        to a positive integer. The data holder should respond with the highest supported
        version between [x-min-v](#request-headers) and [x-v](#request-headers). If
        the value of [x-min-v](#request-headers) is equal to or higher than the value
        of [x-v](#request-headers) then the [x-min-v](#request-headers) header should
        be treated as absent. If all versions requested are not supported then the
        data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
      required: true
      schema:
        type: string
    RequestHeader_x-min-v:
      name: x-min-v
      in: header
      description: Minimum version of the API end point requested by the client. Must
        be set to a positive integer if provided. The data holder should respond with
        the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers).
        If all versions requested are not supported then the data holder must respond
        with a 406 Not Acceptable.
      schema:
        type: string
    RequestHeader_x-fapi-interaction-id:
      name: x-fapi-interaction-id
      in: header
      description: An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as
        a correlation id. If provided, the data holder must play back this value in
        the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID
        value is required to be provided in the response header to track the interaction.
      schema:
        type: string
    RequestHeader_x-fapi-auth-date:
      name: x-fapi-auth-date
      in: header
      required: true
      description: The time when the customer last logged in to the data recipient.
        Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls.
        Format is "HTTP-date" as in section "7.1.1.1" of RFC7231, e.g., "Tue, 11 Sep 2012 19:43:31 GMT"
      schema:
        type: string
        example: 'Tue, 11 Sep 2012 19:43:31 GMT'
    RequestHeader_x-fapi-customer-ip-address:
      name: x-fapi-customer-ip-address
      in: header
      description: The customer's original IP address if the customer is currently
        logged in to the data recipient. The presence of this header indicates that
        the API is being called in a customer present context. Not to be included
        for unauthenticated calls.
      schema:
        type: string
        example: 127.0.0.1
    RequestHeader_x-cds-client-headers:
      name: x-cds-client-headers
      in: header
      description: The customer's original standard http headers [Base64](#common-field-types)
        encoded, including the original User Agent header, if the customer is currently
        logged in to the data recipient. Mandatory for customer present calls.  Not
        required for unattended or unauthenticated calls.
        Format of this field is unclear and might be defined in future as discussed in https://github.com/ConsumerDataStandardsAustralia/standards-maintenance/issues/104
      schema:
        type: string
        x-cds-type: Base64
      x-cds-type: Base64
    ParamTransactionNewestTime:
      name: newest-time
      in: query
      description: Constrain the transaction history request to transactions with
        effective time at or before this date/time.  If absent defaults to today.  Format
        is aligned to DateTimeString common type
      schema:
        type: string
        x-cds-type: DateTimeString
      x-cds-type: DateTimeString
    ParamTransactionOldestTime:
      name: oldest-time
      in: query
      description: Constrain the transaction history request to transactions with
        effective time at or after this date/time. If absent defaults to newest-time
        minus 90 days.  Format is aligned to DateTimeString common type
      schema:
        type: string
        x-cds-type: DateTimeString
      x-cds-type: DateTimeString
    ParamTransactionMinAmount:
      name: min-amount
      in: query
      description: Filter transactions to only transactions with amounts higher or
        equal to than this amount
      schema:
        type: string
        x-cds-type: AmountString
      x-cds-type: AmountString
    ParamTransactionMaxAmount:
      name: max-amount
      in: query
      description: Filter transactions to only transactions with amounts less than
        or equal to than this amount
      schema:
        type: string
        example: "10.00"
        x-cds-type: AmountString
      x-cds-type: AmountString
    ParamTransactionText:
      name: text
      in: query
      description: Filter transactions to only transactions where this string value
        is found as a substring of either the reference or description fields. Format
        is arbitrary ASCII string. This parameter is optionally implemented by data
        holders. If it is not implemented then a response should be provided as normal
        without text filtering applied and an additional boolean field named isQueryParamUnsupported
        should be included in the meta object and set to true (whether the text parameter
        is supplied or not)
      schema:
        type: string
        example: milk
  #-------------------------------
  # Reusable responses
  #-------------------------------
  responses:
    401Unauthorised:
      description: Unauthorised
    403Forbidden:
      description: Forbidden
    404NotFound:
      description: The specified resource was not found.
    400BadRequest:
      description: Request is invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseErrorList'
    424FailedDependency:
      description: A downstream call to the ADH failed
    429RateLimited:
      description: Ratelimit reached
    GenericError:
      description: An error occurred.
      content:
        application/json:
          schema:
            type: string
            example: something went wrong
