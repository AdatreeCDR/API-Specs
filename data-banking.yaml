openapi: 3.0.1
info:
  title: Adatree ADR Platform Data Banking API
  description: |-
    Adatree's Accredited Data Recipient (ADR) Platform Data Banking API definition.
  contact:
    name: Adatree Pty Ltd
    url: https://adatree.com.au
    email: engineering@adatree.com.au
  version: "0.0.2"
servers:
  - url: https://cdr-insights-prod.api.adatree.com.au
paths:
  /data/banking/accounts:
    get:
      security:
        - bearerAuth: [ 'data:banking:accounts:read' ]
        - m2m: [ 'data:banking:accounts:read' ]
      tags:
        - Account Detail Balance
      summary: Get Accounts
      description: |-
        Obtain accounts detail and balance data
      operationId: getAccountsDetailBalance
      parameters:
        - $ref: '#/components/parameters/QueryUseCaseIds'
        - $ref: '#/components/parameters/QueryCdrArrangementIds'
        - $ref: '#/components/parameters/QueryConsentIds'
        - $ref: '#/components/parameters/QueryConsumerIds'
        - $ref: '#/components/parameters/QueryAccountIds'
        - $ref: '#/components/parameters/QueryDataHolderBrandIds'
        - $ref: '#/components/parameters/QueryAccountIsOwned'
        - $ref: '#/components/parameters/QueryAccountOpenStatus'
        - $ref: '#/components/parameters/QueryProductCategory'
        - $ref: '#/components/parameters/QueryPage'
        - $ref: '#/components/parameters/QueryPageSize'
      responses:
        200:
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseAccountList'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        429:
          $ref: '#/components/responses/429RateLimited'
  /data/banking/transactions:
    get:
      security:
        - bearerAuth: [ 'data:banking:transactions:read' ]
        - m2m: [ 'data:banking:transactions:read' ]
      tags:
        - Transactions
      summary: Get Transactions
      description: |-
        Obtain transactions with .operationId: getTransactions
      operationId: getTransactions
      parameters:
        - $ref: '#/components/parameters/QueryUseCaseIds'
        - $ref: '#/components/parameters/QueryAccountIds'
        - $ref: '#/components/parameters/QueryCdrArrangementIds'
        - $ref: '#/components/parameters/QueryConsentIds'
        - $ref: '#/components/parameters/QueryConsumerIds'
        - $ref: '#/components/parameters/QueryDataHolderBrandIds'
        - $ref: '#/components/parameters/QueryTransactionTypes'
        - $ref: '#/components/parameters/QueryTransactionMinimumAmount'
        - $ref: '#/components/parameters/QueryTransactionMaximumAmount'
        - $ref: '#/components/parameters/QueryTransactionOldestRetrievalTime'
        - $ref: '#/components/parameters/QueryTransactionNewestRetrievalTime'
        - $ref: '#/components/parameters/QueryTransactionOldestTime'
        - $ref: '#/components/parameters/QueryTransactionNewestTime'
        - $ref: '#/components/parameters/QueryPage'
        - $ref: '#/components/parameters/QueryPageSize'
      responses:
        200:
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseTransactionList'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorised'
        403:
          $ref: '#/components/responses/403Forbidden'
        429:
          $ref: '#/components/responses/429RateLimited'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    m2m:
      type: oauth2
      description: Machine to machine OAuth2 to access Data - Banking API
      flows:
        clientCredentials:
          tokenUrl: https://adatree-nonprod-adr.auth.ap-southeast-2.amazoncognito.com/oauth2/token
          scopes:
            'data:banking:transactions:read': allow read on transactions
  schemas:
    ResponseTransactionList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          $ref: '#/components/schemas/ResponseTransactionList_data'
        links:
          $ref: '#/components/schemas/LinksPaginated'
        meta:
          $ref: '#/components/schemas/MetaPaginated'
    ResponseAccountList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          $ref: '#/components/schemas/ResponseAccountList_data'
        links:
          $ref: '#/components/schemas/LinksPaginated'
        meta:
          $ref: '#/components/schemas/MetaPaginated'
    ResponseAccountList_data:
      required:
        - accounts
      properties:
        accounts:
          type: array
          description: The list of accounts returned. If the filter results in an empty set then this array may have no records
          items:
            $ref: '#/components/schemas/BankingAccountDetail'
    BankingAccount:
      type: object
      required:
        - accountId
        - displayName
        - maskedNumber
        - productCategory
        - productName
      properties:
        accountId:
          type: string
          example: d9e75179-104f-47cf-9d29-18284222bab0
          description: A unique ID of the account adhering to the standards for ID permanence
          x-cds-type: ASCIIString
        creationDate:
          type: string
          example: "2012-12-25"
          description: Date that the account was created (if known)
          x-cds-type: DateString
        displayName:
          type: string
          example: savings
          description: The display name of the account as defined by the bank. This should not incorporate account numbers or PANs. If it does the values should be masked according to the rules of the MaskedAccountString common type.
        nickname:
          type: string
          example: sav
          description: A customer supplied nick name for the account
        openStatus:
          type: string
          example: OPEN
          description: Open or closed status for the account. If not present then OPEN is assumed
          default: OPEN
          enum:
            - OPEN
            - CLOSED
        isOwned:
          type: boolean
          example: true
          description: Flag indicating that the customer associated with the authorisation is an owner of the account. Does not indicate sole ownership, however. If not present then 'true' is assumed
          default: true
          x-cds-type: Boolean
        maskedNumber:
          type: string
          example: "xxx-xxx xxxxx1234"
          description: A masked version of the account. Whether BSB/Account Number, Credit Card PAN or another number
          x-cds-type: MaskedAccountString
        productCategory:
          $ref: '#/components/schemas/BankingProductCategory'
        productName:
          type: string
          example: Savings
          description: The unique identifier of the account as defined by the data holder (akin to model number for the account)
    BankingAccountDetail:
      allOf:
        - $ref: '#/components/schemas/BankingAccount'
        - type: object
          properties:
            bsb:
              type: string
              example: 062000
              description: The unmasked BSB for the account. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces
            accountNumber:
              example: 12345678
              type: string
              description: The unmasked account number for the account. Should not be supplied if the account number is a PAN requiring PCI compliance. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces
            balance:
              $ref: '#/components/schemas/BankingBalance'
            bundleName:
              type: string
              example: ""
              description: Optional field to indicate if this account is part of a bundle that is providing additional benefit for to the customer
            specificAccountUType:
              type: string
              example: termDeposit
              description: The type of structure to present account specific fields.
              enum:
                - termDeposit
                - creditCard
                - loan
            termDeposit:
              type: array
              items:
                $ref: '#/components/schemas/BankingTermDepositAccount'
            creditCard:
              $ref: '#/components/schemas/BankingCreditCardAccount'
            loan:
              $ref: '#/components/schemas/BankingLoanAccount'
            depositRate:
              type: string
              example: 2.20
              description: current rate to calculate interest earned being applied to deposit balances as it stands at the time of the API call
              x-cds-type: RateString
            lendingRate:
              type: string
              example: 3.19
              description: The current rate to calculate interest payable being applied to lending balances as it stands at the time of the API call
              x-cds-type: RateString
            depositRates:
              type: array
              description: Fully described deposit rates for this account based on the equivalent structure in Product Reference
              items:
                $ref: '#/components/schemas/BankingProductDepositRate'
            lendingRates:
              type: array
              description: Fully described deposit rates for this account based on the equivalent structure in Product Reference
              items:
                $ref: '#/components/schemas/BankingProductLendingRateV2'
            features:
              type: array
              description: Array of features of the account based on the equivalent structure in Product Reference with the following additional field
              items:
                $ref: '#/components/schemas/BankingAccountProductFeature'
            fees:
              type: array
              description: Fees and charges applicable to the account based on the equivalent structure in Product Reference
              items:
                $ref: '#/components/schemas/BankingProductFee'
            addresses:
              type: array
              description: The addresses for the account to be used for correspondence
              items:
                $ref: '#/components/schemas/CommonPhysicalAddress'
            adatree:
              $ref: '#/components/schemas/Adatree'
          x-conditional:
            - termDeposit
            - creditCard
            - loan
    BankingAccountProductFeature:
      type: object
      description: Array of features of the account based on the equivalent structure in Product Reference with the following additional field
      allOf:
        - $ref: '#/components/schemas/BankingProductFeature'
        - type: object
          properties:
            isActivated:
              type: boolean
              description: True if the feature is already activated and false if the feature is available for activation. Defaults to true if absent. (note this is an additional field appended to the feature object defined in the Product Reference payload)
              default: true
              example: true
              x-cds-type: Boolean
    BankingTermDepositAccount:
      type: object
      required:
        - lodgementDate
        - maturityDate
        - maturityInstructions
      properties:
        lodgementDate:
          type: string
          example: "2017-12-31"
          description: The lodgement date of the original deposit
          x-cds-type: DateString
        maturityDate:
          type: string
          example: "2018-12-30"
          description: Maturity date for the term deposit
          x-cds-type: DateString
        maturityAmount:
          type: string
          example: "10000.00"
          description: Amount to be paid upon maturity. If absent it implies the amount to paid is variable and cannot currently be calculated
          x-cds-type: AmountString
        maturityCurrency:
          type: string
          example: AUD
          description: If absent assumes AUD
          x-cds-type: CurrencyString
        maturityInstructions:
          type: string
          example: ROLLED_OVER
          description: Current instructions on action to be taken at maturity. This includes default actions that may be specified in the terms and conditions for the product e.g. roll-over to the same term and frequency of interest payments
          enum:
            - ROLLED_OVER
            - PAID_OUT_AT_MATURITY
            - HOLD_ON_MATURITY
    BankingCreditCardAccount:
      type: object
      required:
        - minPaymentAmount
        - paymentDueAmount
        - paymentDueDate
      properties:
        minPaymentAmount:
          type: string
          example: 99.99
          description: The minimum payment amount due for the next card payment
          x-cds-type: AmountString
        paymentDueAmount:
          type: string
          example: 2999.99
          description: The amount due for the next card payment
          x-cds-type: AmountString
        paymentCurrency:
          type: string
          example: AUD
          description: If absent assumes AUD
          x-cds-type: CurrencyString
        paymentDueDate:
          type: string
          example: "2021-01-01"
          description: Date that the next payment for the card is due
          x-cds-type: DateString
    BankingLoanAccount:
      type: object
      required:
        - loanEndDate
        - nextInstalmentDate
        - repaymentFrequency
      properties:
        originalStartDate:
          type: string
          example: "2017-12-31"
          description: Optional original start date for the loan
          x-cds-type: DateString
        originalLoanAmount:
          type: string
          example: 300000.00
          description: Optional original loan value
          x-cds-type: AmountString
        originalLoanCurrency:
          type: string
          example: AUD
          description: If absent assumes AUD
          x-cds-type: CurrencyString
        loanEndDate:
          type: string
          example: "2047-12-30"
          description: Date that the loan is due to be repaid in full
          x-cds-type: DateString
        nextInstalmentDate:
          type: string
          example: "2021-02-28"
          description: Next date that an instalment is required
          x-cds-type: DateString
        minInstalmentAmount:
          type: string
          example: 999.99
          description: Minimum amount of next instalment
          x-cds-type: AmountString
        minInstalmentCurrency:
          type: string
          example: AUD
          description: If absent assumes AUD
          x-cds-type: CurrencyString
        maxRedraw:
          type: string
          example: 9999.99
          description: Maximum amount of funds that can be redrawn. If not present redraw is not available even if the feature exists for the account
          x-cds-type: AmountString
        maxRedrawCurrency:
          type: string
          example: AUD
          description: If absent assumes AUD
          x-cds-type: CurrencyString
        minRedraw:
          type: string
          example: 1000
          description: Minimum redraw amount
          x-cds-type: AmountString
        minRedrawCurrency:
          type: string
          example: AUD
          description: If absent assumes AUD
          x-cds-type: CurrencyString
        offsetAccountEnabled:
          type: boolean
          example: true
          description: Set to true if one or more offset accounts are configured for this loan account
          x-cds-type: Boolean
        offsetAccountIds:
          type: array
          description: The accountIDs of the configured offset accounts attached to this loan. Only offset accounts that can be accessed under the current authorisation should be included. It is expected behaviour that offsetAccountEnabled is set to true but the offsetAccountIds field is absent or empty. This represents a situation where an offset account exists but details can not be accessed under the current authorisation
          items:
            example: ["f632041c-d7c8-4679-a165-aa406cd62b13"]
            type: string
            x-cds-type: ASCIIString
        repaymentType:
          type: string
          description: Options in place for repayments. If absent defaults to PRINCIPAL_AND_INTEREST
          example: INTEREST_ONLY
          default: PRINCIPAL_AND_INTEREST
          enum:
            - INTEREST_ONLY
            - PRINCIPAL_AND_INTEREST
        repaymentFrequency:
          type: string
          example: P1M
          description: The expected or required repayment frequency. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
          x-cds-type: ExternalRef
    BankingBalance:
      type: object
      required:
        - accountId
        - availableBalance
        - currentBalance
      properties:
        accountId:
          type: string
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          description: A unique ID of the account adhering to the standards for ID permanence
          x-cds-type: ASCIIString
        currentBalance:
          type: string
          example: "10000.00"
          description: The balance of the account at this time. Should align to the balance available via other channels such as Internet Banking. Assumed to be negative if the customer has money owing
          x-cds-type: AmountString
        availableBalance:
          type: string
          example: "10000.00"
          description: Balance representing the amount of funds available for transfer. Assumed to be zero or positive
          x-cds-type: AmountString
        creditLimit:
          type: string
          example: "10000.00"
          description: Object representing the maximum amount of credit that is available for this account. Assumed to be zero if absent
          x-cds-type: AmountString
        amortisedLimit:
          type: string
          example: "0.00"
          description: Object representing the available limit amortised according to payment schedule. Assumed to be zero if absent
          x-cds-type: AmountString
        currency:
          type: string
          example: AUD
          description: The currency for the balance amounts. If absent assumed to be AUD
          x-cds-type: CurrencyString
        purses:
          type: array
          description: Optional array of balances for the account in other currencies. Included to support accounts that support multi-currency purses such as Travel Cards
          items:
            $ref: '#/components/schemas/BankingBalancePurse'
    BankingBalancePurse:
      type: object
      required:
        - amount
      properties:
        amount:
          type: string
          example: "1000.00"
          description: The balance available for this additional currency purse
          x-cds-type: AmountString
        currency:
          type: string
          example: AUD
          description: The currency for the purse
          x-cds-type: CurrencyString
    BankingProductCategory:
      type: string
      description: The category to which a product or account belongs. See [here](#product-categories) for more details
      example: LEASES
      enum:
        - BUSINESS_LOANS
        - CRED_AND_CHRG_CARDS
        - LEASES
        - MARGIN_LOANS
        - OVERDRAFTS
        - PERS_LOANS
        - REGULATED_TRUST_ACCOUNTS
        - RESIDENTIAL_MORTGAGES
        - TERM_DEPOSITS
        - TRADE_FINANCE
        - TRAVEL_CARDS
        - TRANS_AND_SAVINGS_ACCOUNTS
    BankingProductDepositRate:
      type: object
      required:
        - depositRateType
        - rate
      properties:
        depositRateType:
          type: string
          example: FIXED
          description: The type of rate (base, bonus, etc). See the next section for an overview of valid values and their meaning
          enum:
            - BONUS
            - BUNDLE_BONUS
            - FIXED
            - FLOATING
            - INTRODUCTORY
            - MARKET_LINKED
            - VARIABLE
        rate:
          type: string
          example: 2.50
          description: The rate to be applied
          x-cds-type: RateString
        calculationFrequency:
          type: string
          example: P1M
          description: The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
          x-cds-type: ExternalRef
        applicationFrequency:
          type: string
          example: P1M
          description: The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
          x-cds-type: ExternalRef
        tiers:
          type: array
          description: Rate tiers applicable for this rate
          items:
            $ref: '#/components/schemas/BankingProductRateTierV3'
        additionalValue:
          type: string
          example: additional value for deposit rate
          description: Generic field containing additional information relevant to the [depositRateType](#tocSproductdepositratetypedoc) specified. Whether mandatory or not is dependent on the value of [depositRateType](#tocSproductdepositratetypedoc)
        additionalInfo:
          type: string
          example: additional info for deposit rate
          description: Display text providing more information on the rate
        additionalInfoUri:
          type: string
          example: https://depositrate.example.com.au
          description: Link to a web page with more information on this rate
          x-cds-type: URIString
      x-conditional:
        - additionalValue
    BankingProductLendingRateV2:
      type: object
      required:
        - lendingRateType
        - rate
      properties:
        lendingRateType:
          type: string
          description: The type of rate (fixed, variable, etc). See the next section for an overview of valid values and their meaning
          example: CASH_ADVANCE
          enum:
            - BUNDLE_DISCOUNT_FIXED
            - BUNDLE_DISCOUNT_VARIABLE
            - CASH_ADVANCE
            - DISCOUNT
            - FLOATING
            - INTRODUCTORY
            - MARKET_LINKED
            - PENALTY
            - PURCHASE
            - VARIABLE
            - FIXED
        rate:
          type: string
          example: 3.99
          description: The rate to be applied
          x-cds-type: RateString
        comparisonRate:
          type: string
          example: 4.99
          description: A comparison rate equivalent for this rate
          x-cds-type: RateString
        calculationFrequency:
          type: string
          example: P1M
          description: The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
          x-cds-type: ExternalRef
        applicationFrequency:
          type: string
          example: P1M
          description: The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
          x-cds-type: ExternalRef
        interestPaymentDue:
          type: string
          example: IN_ARREARS
          description: When loan payments are due to be paid within each period. The investment benefit of earlier payments affect the rate that can be offered
          enum:
            - IN_ADVANCE
            - IN_ARREARS
        repaymentType:
          type: string
          example: INTEREST_ONLY
          description: Options in place for repayments. If absent, the lending rate is applicable to all repayment types
          enum:
            - INTEREST_ONLY
            - PRINCIPAL_AND_INTEREST
        loanPurpose:
          type: string
          example: OWNER_OCCUPIED
          description: The reason for taking out the loan. If absent, the lending rate is applicable to all loan purposes
          enum:
            - OWNER_OCCUPIED
            - INVESTMENT
        tiers:
          type: array
          description: Rate tiers applicable for this rate
          items:
            $ref: '#/components/schemas/BankingProductRateTierV3'
        additionalValue:
          type: string
          example: additional value for lending
          description: Generic field containing additional information relevant to the [lendingRateType](#tocSproductlendingratetypedoc) specified. Whether mandatory or not is dependent on the value of [lendingRateType](#tocSproductlendingratetypedoc)
        additionalInfo:
          type: string
          example: additional info for lending
          description: Display text providing more information on the rate.
        additionalInfoUri:
          type: string
          example: https://lendingrate.example.com.au
          description: Link to a web page with more information on this rate
          x-cds-type: URIString
      x-conditional:
        - additionalValue
    BankingProductFee:
      type: object
      required:
        - feeType
        - name
      properties:
        name:
          type: string
          description: Name of the fee
          example: account fee
        feeType:
          type: string
          description: The type of fee
          example: PERIODIC
          enum:
            - DEPOSIT
            - EVENT
            - EXIT
            - PAYMENT
            - PERIODIC
            - PURCHASE
            - TRANSACTION
            - UPFRONT
            - VARIABLE
            - WITHDRAWAL
        amount:
          type: string
          description: The amount charged for the fee. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the *feeType* "VARIABLE" is supplied
          x-cds-type: AmountString
          example: 4.00
        balanceRate:
          type: string
          description: A fee rate calculated based on a proportion of the balance. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the *feeType* "VARIABLE" is supplied.
          example: 3.99
          x-cds-type: RateString
        transactionRate:
          type: string
          description: A fee rate calculated based on a proportion of a transaction. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the *feeType* "VARIABLE" is supplied
          example: 0.02
          x-cds-type: RateString
        accruedRate:
          type: string
          description: A fee rate calculated based on a proportion of the calculated interest accrued on the account. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the *feeType* "VARIABLE" is supplied
          example: 0.00
          x-cds-type: RateString
        accrualFrequency:
          type: string
          description: The indicative frequency with which the fee is calculated on the account. Only applies if balanceRate or accruedRate is also present. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
          x-cds-type: ExternalRef
          example: P1M
        currency:
          type: string
          description: The currency the fee will be charged in. Assumes AUD if absent
          example: AUD
          x-cds-type: CurrencyString
        additionalValue:
          type: string
          description: Generic field containing additional information relevant to the [feeType](#tocSproductfeetypedoc) specified. Whether mandatory or not is dependent on the value of [feeType](#tocSproductfeetypedoc)
          example: additional info for bank account fee
        additionalInfo:
          type: string
          description: Display text providing more information on the fee
          example: additional info on the fee
        additionalInfoUri:
          type: string
          description: Link to a web page with more information on this fee
          example: https://bankfee.example.com.au
          x-cds-type: URIString
        discounts:
          type: array
          description: An optional list of discounts to this fee that may be available
          items:
            $ref: '#/components/schemas/BankingProductDiscount'
      x-conditional:
        - additionalValue
        - amount
        - balanceRate
        - transactionRate
        - accruedRate
    CommonPhysicalAddress:
      type: object
      required:
        - addressUType
      properties:
        addressUType:
          type: string
          description: The type of address object present
          example: simple
          enum:
            - simple
            - paf
        simple:
          $ref: '#/components/schemas/CommonSimpleAddress'
        paf:
          $ref: '#/components/schemas/CommonPAFAddress'
      x-conditional:
        - simple
        - paf
    BankingProductFeature:
      type: object
      required:
        - featureType
      properties:
        featureType:
          type: string
          description: The type of feature described
          example: BONUS_REWARDS
          enum:
            - ADDITIONAL_CARDS
            - BALANCE_TRANSFERS
            - BILL_PAYMENT
            - BONUS_REWARDS
            - CARD_ACCESS
            - COMPLEMENTARY_PRODUCT_DISCOUNTS
            - DIGITAL_BANKING
            - DIGITAL_WALLET
            - DONATE_INTEREST
            - FREE_TXNS
            - FREE_TXNS_ALLOWANCE
            - INSURANCE
            - INTEREST_FREE
            - INTEREST_FREE_TRANSFERS
            - LOYALTY_PROGRAM
            - NOTIFICATIONS
            - NPP_ENABLED
            - NPP_PAYID
            - OFFSET
            - OVERDRAFT
            - REDRAW
            - UNLIMITED_TXNS
            - OTHER
        additionalValue:
          type: string
          description: Generic field containing additional information relevant to the [featureType](#tocSproductfeaturetypedoc) specified. Whether mandatory or not is dependent on the value of the [featureType.](#tocSproductfeaturetypedoc)
          example: free mobile device screen smash insurance
        additionalInfo:
          type: string
          description: Display text providing more information on the feature. Mandatory if the [feature type](#tocSproductfeaturetypedoc) is set to OTHER
          example: the best of a kind
        additionalInfoUri:
          type: string
          description: Link to a web page with more information on this feature
          example: https://productfeature.example.com.au
          x-cds-type: URIString
      x-conditional:
        - additionalValue
        - additionalInfo
    BankingProductRateTierV3:
      type: object
      required:
        - minimumValue
        - name
        - unitOfMeasure
      properties:
        name:
          type: string
          example: basic
          description: A display name for the tier
        unitOfMeasure:
          type: string
          example: MONTH
          description: The unit of measure that applies to the tierValueMinimum and tierValueMaximum values e.g. a **DOLLAR** amount. **PERCENT** (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of **MONTH**'s or **DAY**'s (in the case of term deposit tiers)
          enum:
            - DOLLAR
            - PERCENT
            - DAY
            - MONTH
        minimumValue:
          type: number
          example: 1
          description: The number of tierUnitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value
          x-cds-type: Number
        maximumValue:
          type: number
          example: 3
          description: 'The number of tierUnitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as tierValueMinimum. Where this is the same as the tierValueMinimum value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 â€“ 2 months, 2 â€“ 3 months). If absent the tier''s range has no upper bound.'
          x-cds-type: Number
        rateApplicationMethod:
          type: string
          description: The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps')
          example: PER_TIER
          enum:
            - PER_TIER
            - WHOLE_BALANCE
        applicabilityConditions:
          $ref: '#/components/schemas/BankingProductRateCondition'
        additionalInfo:
          type: string
          example: additional info for tier
          description: Display text providing more information on the rate tier.
        additionalInfoUri:
          type: string
          example: https://tier.example.com.au
          description: Link to a web page with more information on this rate tier
          x-cds-type: URIString
      description: Defines the criteria and conditions for which a rate applies
    BankingProductDiscount:
      type: object
      required:
        - description
        - discountType
      properties:
        description:
          type: string
          example: loyalty discount
          description: Description of the discount
        discountType:
          type: string
          example: ELIGIBILITY_ONLY
          description: The type of discount. See the next section for an overview of valid values and their meaning
          enum:
            - BALANCE
            - DEPOSITS
            - ELIGIBILITY_ONLY
            - FEE_CAP
            - PAYMENTS
        amount:
          type: string
          example: 10.00
          description: Dollar value of the discount. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory.
          x-cds-type: AmountString
        balanceRate:
          type: string
          example: 0.05
          description: A discount rate calculated based on a proportion of the balance. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee
          x-cds-type: RateString
        transactionRate:
          type: string
          example: 0.05
          description: A discount rate calculated based on a proportion of a transaction. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory
          x-cds-type: RateString
        accruedRate:
          type: string
          example: 0.05
          description: A discount rate calculated based on a proportion of the calculated interest accrued on the account. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee
          x-cds-type: RateString
        feeRate:
          type: string
          example: 0.05
          description: A discount rate calculated based on a proportion of the fee to which this discount is attached. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee
          x-cds-type: RateString
        additionalValue:
          type: string
          example: extra discount
          description: Generic field containing additional information relevant to the [discountType](#tocSproductdiscounttypedoc) specified. Whether mandatory or not is dependent on the value of [discountType](#tocSproductdiscounttypedoc)
        additionalInfo:
          type: string
          example: addition info for discount
          description: Display text providing more information on the discount
        additionalInfoUri:
          type: string
          example: https://productdiscount.example.com.au
          description: Link to a web page with more information on this discount
          x-cds-type: URIString
        eligibility:
          type: array
          description: Eligibility constraints that apply to this discount. Mandatory if ``discountType`` is ``ELIGIBILITY_ONLY``.
          items:
            $ref: '#/components/schemas/BankingProductDiscountEligibility'
      x-conditional:
        - accruedRate
        - additionalValue
        - amount
        - balanceRate
        - eligibility
        - feeRate
        - transactionRate
    CommonSimpleAddress:
      type: object
      required:
        - addressLine1
        - city
        - state
      properties:
        mailingName:
          type: string
          description: Name of the individual or business formatted for inclusion in an address used for physical mail
          example: John Doe
        addressLine1:
          type: string
          description: First line of the standard address object
          example: 1 Pitt ST
        addressLine2:
          type: string
          description: Second line of the standard address object
          example: ""
        addressLine3:
          type: string
          description: Third line of the standard address object
          example: ""
        postcode:
          type: string
          description: Mandatory for Australian addresses
          example: 2000
        city:
          type: string
          description: Name of the city or locality
          example: SYDNEY
        state:
          type: string
          description: Free text if the country is not Australia. If country is Australia then must be one of the values defined by the [State Type Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf) in the PAF file format. NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT
          example: NSW
        country:
          type: string
          description: A valid [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country code. Australia (AUS) is assumed if country is not present.
          example: AUS
          default: AUS
          x-cds-type: ExternalRef
      x-conditional:
        - postcode
    CommonPAFAddress:
      type: object
      required:
        - localityName
        - postcode
        - state
      properties:
        dpid:
          type: string
          description: Unique identifier for an address as defined by Australia Post.  Also known as Delivery Point Identifier
          example: 17160
        thoroughfareNumber1:
          type: integer
          description: Thoroughfare number for a property (first number in a property ranged address)
          example: 16
          x-cds-type: PositiveInteger
        thoroughfareNumber1Suffix:
          type: string
          description: Suffix for the thoroughfare number. Only relevant is thoroughfareNumber1 is populated
          example: ""
        thoroughfareNumber2:
          type: integer
          description: Second thoroughfare number (only used if the property has a ranged address eg 23-25)
          example: 19
          x-cds-type: PositiveInteger
        thoroughfareNumber2Suffix:
          type: string
          description: Suffix for the second thoroughfare number. Only relevant is thoroughfareNumber2 is populated
          example: ""
        flatUnitType:
          type: string
          description: Type of flat or unit for the address
          example: unit
        flatUnitNumber:
          type: string
          description: Unit number (including suffix, if applicable)
          example: 10
        floorLevelType:
          type: string
          description: Type of floor or level for the address
          example: level
        floorLevelNumber:
          type: string
          description: Floor or level number (including alpha characters)
          example: 3
        lotNumber:
          type: string
          description: Allotment number for the address
          example: 10
        buildingName1:
          type: string
          description: Building/Property name 1
          example: summer
        buildingName2:
          type: string
          description: Building/Property name 2
          example: ""
        streetName:
          type: string
          description: The name of the street
          example: Long
        streetType:
          type: string
          description: The street type. Valid enumeration defined by Australia Post PAF code file
          example: ST
        streetSuffix:
          type: string
          description: The street type suffix. Valid enumeration defined by Australia Post PAF code file
        postalDeliveryType:
          type: string
          description: Postal delivery type. (eg. PO BOX). Valid enumeration defined by Australia Post PAF code file
          example: PO BOX
        postalDeliveryNumber:
          type: integer
          description: Postal delivery number if the address is a postal delivery type
          example: 15
          x-cds-type: PositiveInteger
        postalDeliveryNumberPrefix:
          type: string
          description: Postal delivery number prefix related to the postal delivery number
          example: ""
        postalDeliveryNumberSuffix:
          type: string
          description: Postal delivery number suffix related to the postal delivery number
          example: ""
        localityName:
          type: string
          description: Full name of locality
          example: "Sydney"
        postcode:
          type: string
          description: Postcode for the locality
          example: 2000
        state:
          type: string
          description: State in which the address belongs. Valid enumeration defined by Australia Post PAF code file [State Type Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf). NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT
          example: NSW
      description: Australian address formatted according to the file format defined by the [PAF file format](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf)
    BankingProductRateCondition:
      type: object
      properties:
        additionalInfo:
          type: string
          example: additional info for rate condition
          description: Display text providing more information on the condition
        additionalInfoUri:
          type: string
          description: Link to a web page with more information on this condition
          example: https://ratecondition.example.com.au
          x-cds-type: URIString
      description: Defines a condition for the applicability of a tiered rate
    BankingProductDiscountEligibility:
      type: object
      required:
        - discountEligibilityType
      properties:
        discountEligibilityType:
          type: string
          example: "STAFF"
          description: The type of the specific eligibility constraint for a discount
          enum:
            - BUSINESS
            - EMPLOYMENT_STATUS
            - INTRODUCTORY
            - MAX_AGE
            - MIN_AGE
            - MIN_INCOME
            - MIN_TURNOVER
            - NATURAL_PERSON
            - PENSION_RECIPIENT
            - RESIDENCY_STATUS
            - STAFF
            - STUDENT
            - OTHER
        additionalValue:
          type: string
          example: additional value for discount eligibility
          description: Generic field containing additional information relevant to the [discountEligibilityType](#tocSproductdiscounteligibilitydoc) specified. Whether mandatory or not is dependent on the value of [discountEligibilityType](#tocSproductdiscounteligibilitydoc)
        additionalInfo:
          type: string
          example: additional info for discount eligibility
          description: Display text providing more information on this eligibility constraint. Whether mandatory or not is dependent on the value of [discountEligibilityType](#tocSproductdiscounteligibilitydoc)
        additionalInfoUri:
          type: string
          example: https://discounteligibility.example.com.au
          description: Link to a web page with more information on this eligibility constraint
          x-cds-type: URIString
      x-conditional:
        - additionalInfo
        - additionalValue
    LinksPaginated:
      type: object
      required:
        - self
      properties:
        self:
          type: string
          description: Fully qualified link that generated the current response document.
            https://self.example.com.au will be converted to https://self.example.com.au?page=1&page-size=25
          example: https://self.example.com.au?page=3&page-size=25
        first:
          type: string
          description: URI to the first page of this set. Mandatory if this response is not the first page
          example: https://self.example.com.au?page=1&page-size=25
        prev:
          type: string
          description: URI to the previous page of this set. Mandatory if this response is not the first page
          example: https://self.example.com.au?page=2&page-size=25
        next:
          type: string
          description: URI to the next page of this set. Mandatory if this response is not the last page
          example: https://self.example.com.au?page=4&page-size=25
        last:
          type: string
          description: URI to the last page of this set. Mandatory if this response is not the last page
          example: https://self.example.com.au?page=15&page-size=25
      x-conditional:
        - prev
        - next
        - first
        - last
    MetaPaginated:
      type: object
      required:
        - totalPages
        - totalRecords
      properties:
        totalRecords:
          type: integer
          description: The total number of records in the full set. See [pagination](#pagination).
          example: 581
        totalPages:
          type: integer
          description: The total number of pages in the full set. See [pagination](#pagination).
          example: 24
    ResponseErrorList:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResponseErrorList_errors'
    ResponseTransactionList_data:
      required:
        - transactions
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    ResponseErrorList_errors:
      required:
        - code
        - detail
        - title
      properties:
        code:
          type: string
          description: 'Error code'
          example: "0001"
        title:
          type: string
          description: 'Title of invalid parameter or payload property '
          example: "Invalid account id"
        detail:
          type: string
          description: ID of the account not found
          example: "invalid format for account id"
        meta:
          type: object
          description: Optional additional data for specific error types
          properties: {}
    Transaction:
      type: object
      required:
        - accountId
        - amount
        - description
        - isDetailAvailable
        - reference
        - status
        - type
      properties:
        accountId:
          type: string
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          description: ID of the account for which transactions are provided
          x-cds-type: ASCIIString
        transactionId:
          type: string
          example: f111111-d7c8-4679-a165-aa406cd62b13
          description: A unique ID of the transaction adhering to the standards for ID permanence.  This is mandatory (through hashing if necessary) unless there are specific and justifiable technical reasons why a transaction cannot be uniquely identified for a particular account type
          x-cds-type: ASCIIString
        isDetailAvailable:
          type: boolean
          example: true
          description: True if extended information is available using the transaction detail end point. False if extended data is not available
          x-cds-type: Boolean
        type:
          type: string
          example: FEE
          description: The type of the transaction
          enum:
            - DIRECT_DEBIT
            - FEE
            - INTEREST_CHARGED
            - INTEREST_PAID
            - PAYMENT
            - TRANSFER_OUTGOING
            - TRANSFER_INCOMING
            - OTHER
        status:
          type: string
          example: POSTED
          description: Status of the transaction whether pending or posted. Note that there is currently no provision in the standards to guarantee the ability to correlate a pending transaction with an associated posted transaction
          enum:
            - PENDING
            - POSTED
        description:
          example: banking fee
          type: string
          description: The transaction description as applied by the financial institution
        postingDateTime:
          type: string
          example: "2021-01-12T15:43:00.121Z"
          description: The time the transaction was posted. This field is Mandatory if the transaction has status POSTED.  This is the time that appears on a standard statement.
            DateTimeString can be found at https://consumerdatastandardsaustralia.github.io/standards/#common-field-types
          x-cds-type: DateTimeString
        valueDateTime:
          type: string
          example: "2021-01-12T15:43:00.121Z"
          description: Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry
          x-cds-type: DateTimeString
        executionDateTime:
          type: string
          example: "2021-01-12T15:43:00.121Z"
          description: The time the transaction was executed by the originating customer, if available
          x-cds-type: DateTimeString
        amount:
          type: string
          example: 100.00
          description: The value of the transaction. Negative values mean money was outgoing from the account
          x-cds-type: AmountString
        currency:
          type: string
          example: AUD
          description: The currency for the transaction amount. AUD assumed if not present
          x-cds-type: CurrencyString
        reference:
          type: string
          example: overdraw
          description: The reference for the transaction provided by the originating institution. Empty string if no data provided
        merchantName:
          type: string
          example: McDonald
          description: Name of the merchant for an outgoing payment to a merchant
        merchantCategoryCode:
          type: string
          example: RANDOM
          description: The merchant category code (or MCC) for an outgoing payment to a merchant
        billerCode:
          type: string
          example: 234213427384923
          description: BPAY Biller Code for the transaction (if available)
        billerName:
          type: string
          example: test biller
          description: Name of the BPAY biller for the transaction (if available)
        crn:
          type: string
          example: 1234asdf1
          description: BPAY CRN for the transaction (if available)
        apcaNumber:
          type: string
          example: 111111
          description: 6 Digit APCA number for the initiating institution. The field is fixed-width and padded with leading zeros if applicable.
        extendedData:
          $ref: '#/components/schemas/Transaction_extendedData'
        adatree:
          $ref: '#/components/schemas/Transaction_adatree'
      x-conditional:
        - transactionId
        - postingDateTime
    Transaction_extendedData_x2p101Payload:
      required:
        - extendedDescription
      properties:
        extendedDescription:
          type: string
          description: An extended string description. Only present if specified by the extensionUType field
          example: extended description of a transaction
        endToEndId:
          type: string
          description: An end to end ID for the payment created at initiation
          example: end-to-endid-for-payment
        purposeCode:
          type: string
          description: Purpose of the payment.  Format is defined by NPP standards for the x2p1.01 overlay service
          example: payment-purpose-npp
    Transaction_extendedData:
      required:
        - service
      properties:
        payer:
          type: string
          description: Label of the originating payer. Mandatory for inbound payment
          example: Jane Doe
        payee:
          type: string
          description: Label of the target PayID.  Mandatory for an outbound payment. The name assigned to the BSB/Account Number or PayID (by the owner of the PayID)
          example: John Doe
        extensionUType:
          type: string
          description: Optional extended data provided specific to transaction originated via NPP
          example: x2p101Payload
          enum:
            - x2p101Payload
        x2p101Payload:
          $ref: '#/components/schemas/Transaction_extendedData_x2p101Payload'
        service:
          type: string
          description: 'Identifier of the applicable overlay service. Valid values are: X2P1.01'
          example: X2P1.01
          enum:
            - X2P1.01
    Adatree:
      description: Extra data and metadata provided by Adatree
      required:
        - consentId
        - consumerId
        - cdrArrangementId
        - dataHolderBrandId
        - useCaseId
      properties:
        consentId:
          type: string
          example: 55b3299a-3e50-48a2-a190-cca263ccaba5
          description: Consent Id for related resource
        consumerId:
          type: string
          example: 55b3299a-3e50-48a2-a190-cca263ccaba5
          description: Consumer Id for related resource
        cdrArrangementId:
          type: string
          example: f111111-d7c8-4679-a165-aa406cd62b13
          description: CDR Arrangement for related resource
        dataHolderBrandId:
          type: string
          example: 55b3299a-3e50-48a2-a190-cca263ccaba5
          description: Data Holder Brand Id for related resource
        useCaseId:
          type: string
          example: HOME_LOAN
          description: Use Case Id for related resource
    Transaction_adatree:
      description: Extra data and metadata provided by Adatree for transactions
      required:
        - resourceId
      allOf:
        - $ref: '#/components/schemas/Adatree'
        - type: object
          properties:
            resourceId:
              type: string
              example: f632041c-d7c8-4679-a165-aa406cd62b13
              description: resource ID generated by Adatree; the ADHs do not always provide a transaction Id so we generate an id to uniquely identify a transaction
            categorisation:
              $ref: '#/components/schemas/Transaction_adatree_categorisation'
    Transaction_adatree_categorisation:
      properties:
        personetics:
          $ref: '#/components/schemas/Transaction_adatree_personetics'
    Transaction_adatree_personetics:
      description: Personetics is Adatree's transaction categorisation partner
      required:
        - categoryName
        - subcategoryName
      properties:
        categoryName:
          type: string
          example: "Cash Deposit"
          enum:
            - "Cash Deposit"
            - "Cash Withdrawal"
            - "Check Deposit"
            - "Checks Posted"
            - "Credit Card Payments"
            - "Digital Wallet"
            - "Dining"
            - "Direct Debit & Standing Order"
            - "Direct Deposit"
            - "Donations"
            - "Education"
            - "Entertainment"
            - "Fees & Other charges"
            - "Groceries"
            - "Health & Fitness"
            - "Household"
            - "Insurance"
            - "Interest & Dividends"
            - "Kids & Family"
            - "Loan & Mortgage"
            - "Office expenses"
            - "Paycheck, Pensions & Annuity"
            - "Personal Care"
            - "Savings & Investments"
            - "Shopping"
            - "Taxes & Authorities"
            - "Transfers Between Own Accounts"
            - "Transportation"
            - "Travel"
            - "Utilities"
            - "Other Deposits"
            - "Other transfers"
            - "Other"
        subCategoryName:
          type: string
          example: "Cash Deposit"
          enum:
            - "Activities & Attractions"
            - "Airlines"
            - "Annuities"
            - "Apparel - Clothing, Shoes & Accessories"
            - "Art Galleries & Antiques"
            - "ATM Fees"
            - "Attractions"
            - "Bakeries"
            - "Bars & Pubs"
            - "Beauty Products"
            - "Books & Newspapers"
            - "Car Finance"
            - "Car Insurance"
            - "Car Rentals"
            - "Cash Deposit"
            - "Cash Withdrawal"
            - "Check Deposit"
            - "Checks Posted"
            - "Child Care"
            - "Children's Clothings Stores"
            - "Cleaning"
            - "Construction"
            - "Conversion Fees"
            - "Credit Card Payments"
            - "Currency Exchange"
            - "Deli"
            - "Department & Discount Stores"
            - "Digital Entertainment"
            - "Digital Wallet"
            - "Dining"
            - "Direct Debit & Standing Order"
            - "Direct Deposit"
            - "Dividends"
            - "Donations"
            - "Drugs & Pharmacy"
            - "Education"
            - "Electricity, Water, Gas"
            - "Electronics & Computers"
            - "Electronics"
            - "Elementary & Secondary School"
            - "Entertainment"
            - "Equipment Finance"
            - "Fast Food"
            - "Fitness & Leisure"
            - "Furniture"
            - "Games"
            - "Gardening"
            - "Gas Station"
            - "General Office Expenses"
            - "Government Services"
            - "Hair, Nails & Beauty Shops"
            - "Hardware & Appliances"
            - "Health & fitness"
            - "Healthcare Finance"
            - "Heating, Plumbing, Electricity"
            - "Higher Education"
            - "Hobbies & Gifts"
            - "Hotels, Resorts & Lodgings"
            - "Household Services"
            - "Household"
            - "Insurance"
            - "Interest deposit"
            - "Investment deposit"
            - "Investments"
            - "Jewelry"
            - "Kids & Family"
            - "Laundry & Dry Cleaning"
            - "Life Insurance"
            - "Line of Credit"
            - "Liquor Stores"
            - "Loans"
            - "Medical & Healthcare"
            - "Medical Insurance"
            - "Mortgage"
            - "Movies, Music & Shows"
            - "Office expenses"
            - "Office Supplies"
            - "Other Deposits"
            - "Other Fees and Charges"
            - "Other Insurance"
            - "Other Loans"
            - "Other Savings & Investments"
            - "Other Transfers"
            - "Other"
            - "Overdraft Fees"
            - "P2P"
            - "Parking & Tolls"
            - "Paycheck"
            - "Payday & Pawn & Title Loans"
            - "Pension"
            - "Personal Care"
            - "Personal Loan"
            - "Pet Care & Supplies"
            - "Pet Insurance"
            - "Phone & Internet"
            - "Photography, Publishing & Printing"
            - "Professional Services"
            - "Property & Casualty Insurance"
            - "Public Transportation"
            - "Real Estate"
            - "Restaurants"
            - "Savings"
            - "Service Fees"
            - "Shipping & Deliveries"
            - "Shopping"
            - "Sport Entertainment"
            - "Student Loan"
            - "Supermarket, Grocery & Convenience Stores"
            - "Taxes & Authorities"
            - "Taxes, Fines & Bail Bonds"
            - "Taxi"
            - "Transfers between own accounts"
            - "Transportation"
            - "Travel"
            - "Utilities"
            - "Vehicle Dealers"
            - "Vehicle Operating Expenses"
            - "Vocational Schools"
  #-------------------------------
  # Reusable parameters
  #-------------------------------
  parameters:
    QueryAccountIds:
      name: accountIds
      in: query
      required: false
      description: Used to filter results on the accountId field.
      schema:
        type: array
        items:
          type: string
          x-cds-type: ASCIIString
          description: Array of specific accountIds to obtain data for
          example: 30370f1b-cd27-4d56-b56d-beb49fc9aa48
    QueryAccountIsOwned:
      name: is-owned
      in: query
      description: Filters accounts based on whether they are owned by the authorised customer.
        True for owned accounts, false for unowned accounts and absent for all accounts
      schema:
        type: boolean
        example: true
        x-cds-type: Boolean
    QueryAccountOpenStatus:
      name: open-status
      in: query
      description: Used to filter results according to open/closed status. Values can be OPEN, CLOSED
      required: false
      schema:
        type: string
        example: OPEN
        enum:
          - OPEN
          - CLOSED
    QueryDataHolderIds:
      name: data-holder-ids
      in: query
      description: Array of strings used to identify the data holders.
      required: false
      schema:
        type: array
        items:
          type: string
          example: 55b3299a-3e50-48a2-a190-cca263ccaba5
    QueryPage:
      name: page
      in: query
      description: Page of results to request (standard pagination)
      schema:
        type: integer
        format: int32
        default: 1
        minimum: 1
        example: 1
    QueryPageSize:
      name: pageSize
      in: query
      description: Page size to request. Default is 25 (standard pagination)
      schema:
        type: integer
        default: 25
        minimum: 1
        example: 25
    QueryProductCategory:
      name: product-category
      in: query
      description: Used to filter results on the productCategory field applicable to accounts.
        Any one of the valid values for this field can be supplied. If absent then all accounts returned.
      required: false
      schema:
        type: array
        items:
          type: string
          example: BUSINESS_LOANS
          enum:
            - BUSINESS_LOANS
            - CRED_AND_CHRG_CARDS
            - LEASES
            - MARGIN_LOANS
            - OVERDRAFTS
            - PERS_LOANS
            - REGULATED_TRUST_ACCOUNTS
            - RESIDENTIAL_MORTGAGES
            - TERM_DEPOSITS
            - TRADE_FINANCE
            - TRAVEL_CARDS
            - TRANS_AND_SAVINGS_ACCOUNTS
    QueryUseCaseIds:
      name: useCaseIds
      in: query
      description: Used to filter results on the useCaseId field.
      schema:
        type: array
        items:
          type: string
          x-cds-type: ASCIIString
          description: Array of specific UseCaseIds to obtain data for
          example: HOME_LOAN
    QueryCdrArrangementIds:
      name: cdrArrangementIds
      in: query
      description: Used to filter results on the cdrArrangementId field.
      schema:
        type: array
        items:
          type: string
          x-cds-type: ASCIIString
          description: Array of specific cdrArrangementIds to obtain data for
          example: 30370f1b-cd27-4d56-b56d-beb49fc9aa48
    QueryConsentIds:
      name: consentIds
      in: query
      description: Used to filter results on the consentId field.
      schema:
        type: array
        items:
          type: string
          x-cds-type: ASCIIString
          description: Array of specific consentIds to obtain data for
          example: 30370f1b-cd27-4d56-b56d-beb49fc9aa48
    QueryConsumerIds:
      name: consumerIds
      in: query
      description: Used to filter results on the consumerId field.
      schema:
        type: array
        items:
          type: string
          x-cds-type: ASCIIString
          description: Array of specific consumerIds to obtain data for
          example: 30370f1b-cd27-4d56-b56d-beb49fc9aa48
    QueryDataHolderBrandIds:
      name: dataHolderBrandIds
      in: query
      description: Used to filter results on the dataHolderBrandId field.
      schema:
        type: array
        items:
          type: string
          x-cds-type: ASCIIString
          description: Array of specific dataHolderBrandIds to obtain data for
          example: 30370f1b-cd27-4d56-b56d-beb49fc9aa48
    QueryTransactionOldestRetrievalTime:
      name: oldestRetrievalTime
      in: query
      description: Constrain the transaction history request to transactions with retrieval time at or after this date/time. If absent defaults newest time minus 90 days. Format
        is aligned to DateTimeString common type.
      schema:
        type: string
        x-cds-type: DateTimeString
        example: "2012-12-25T15:43:00-08:00"
    QueryTransactionNewestRetrievalTime:
      name: newestRetrievalTime
      in: query
      description: Constrain the transaction history request to transactions with retrieval time at or before this date/time. If absent defaults to now. Format
        is aligned to DateTimeString common type.
      schema:
        type: string
        x-cds-type: DateTimeString
        example: "2012-12-25T15:43:00-08:00"
    QueryTransactionNewestTime:
      name: newestTime
      in: query
      description: Constrain the transaction history request to transactions with
        effective time at or before this date/time.  If absent defaults to today.  Format
        is aligned to DateTimeString common type
      schema:
        type: string
        x-cds-type: DateTimeString
        example: "2012-12-25T15:43:00-08:00"
    QueryTransactionOldestTime:
      name: oldestTime
      in: query
      description: Constrain the transaction history request to transactions with
        effective time at or after this date/time. If absent defaults to newest-time
        minus 90 days.  Format is aligned to DateTimeString common type
      schema:
        type: string
        x-cds-type: DateTimeString
        example: "2012-12-25T15:43:00-08:00"
    QueryTransactionTypes:
      name: types
      in: query
      description: Used to filter results on the type field.
      schema:
        type: array
        items:
          type: string
          x-cds-type: ASCIIString
          description: Array of specific types to obtain data for
          example: FEE
    QueryTransactionMinimumAmount:
      name: minimumAmount
      in: query
      description: Used to filter results on the amount field
      schema:
        type: number
        example: 100
        x-cds-type: Number
    QueryTransactionMaximumAmount:
      name: maximumAmount
      in: query
      description: Used to filter results on the amount field
      schema:
        type: number
        example: 300
        x-cds-type: Number
  #-------------------------------
  # Reusable responses
  #-------------------------------
  responses:
    401Unauthorised:
      description: Unauthorised
    403Forbidden:
      description: Forbidden
    404NotFound:
      description: The specified resource was not found.
    400BadRequest:
      description: Request is invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseErrorList'
    429RateLimited:
      description: Ratelimit reached
    GenericError:
      description: An error occurred.
      content:
        application/json:
          schema:
            type: string
            example: something went wrong
